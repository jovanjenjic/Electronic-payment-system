2021-02-07 15:35:10,277 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 15:35:10,324 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 15:35:10,730 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 15:35:11,417 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 15:35:11,511 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 78ms. Found 2 JPA repository interfaces.
2021-02-07 15:35:11,604 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 15:35:11,698 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 15:35:12,073 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 15:35:12,073 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 15:35:12,073 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 15:35:12,089 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 15:35:12,182 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 15:35:12,182 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1437 ms
2021-02-07 15:35:12,229 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 15:35:12,229 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 15:35:12,245 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5848ee5c
2021-02-07 15:35:12,370 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 15:35:12,386 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 15:35:12,417 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 15:35:12,448 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 15:35:12,542 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 15:35:12,635 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 15:35:12,745 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 15:35:12,760 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 15:35:12,901 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 15:35:12,901 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 15:35:13,010 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 15:35:13,010 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 15:35:13,292 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 15:35:13,292 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 15:35:13,370 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 15:35:13,385 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 15:35:13,385 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 15:35:13,432 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 15:35:14,135 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 15:35:14,166 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 15:35:14,229 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 15:35:14,244 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 15:35:14,260 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 15:35:14,369 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 15:35:14,369 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 15:35:14,369 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 15:35:14,385 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 15:35:14,385 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 15:35:14,385 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 15:35:14,385 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 15:35:14,557 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 15:35:14,573 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 15:35:14,573 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 15:35:14,573 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612708514573 with initial instances count: 2
2021-02-07 15:35:14,573 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 15:35:14,573 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612708514573, current=UP, previous=STARTING]
2021-02-07 15:35:14,573 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 15:35:14,573 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 15:35:14,619 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 15:35:14,791 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 15:35:14,791 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 15:35:14,947 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 15:35:15,135 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 15:35:15,151 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 15:35:15,166 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.397 seconds (JVM running for 6.377)
2021-02-07 15:35:15,213 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(2)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 15:35:15,213 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 15:35:15,229 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Completed initialization in 16 ms
2021-02-07 15:35:15,244 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 15:40:14,407 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 15:45:14,417 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 15:50:14,439 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 15:55:14,448 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 16:00:14,457 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 16:00:54,174 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:00:54,205 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:00:54,705 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:00:55,314 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:00:55,377 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57ms. Found 2 JPA repository interfaces.
2021-02-07 16:00:55,470 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 16:00:55,548 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 16:00:55,970 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 16:00:55,970 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:00:55,970 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 16:00:55,970 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 16:00:56,064 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 16:00:56,064 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1343 ms
2021-02-07 16:00:56,111 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:00:56,126 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:00:56,126 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5848ee5c
2021-02-07 16:00:56,267 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 16:00:56,267 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 16:00:56,298 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 16:00:56,345 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 16:00:56,439 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 16:00:56,533 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 16:00:56,626 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 16:00:56,642 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 16:00:56,783 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 16:00:56,783 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 16:00:56,908 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 16:00:56,908 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 16:00:57,173 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 16:00:57,189 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 16:00:57,251 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 16:00:57,267 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:00:57,267 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:00:57,314 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 16:00:58,001 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 16:00:58,017 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 16:00:58,079 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 16:00:58,079 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 16:00:58,095 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 16:00:58,220 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 16:00:58,220 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 16:00:58,220 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 16:00:58,235 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 16:00:58,235 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 16:00:58,235 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 16:00:58,235 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 16:00:58,423 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 16:00:58,423 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 16:00:58,423 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 16:00:58,423 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612710058423 with initial instances count: 3
2021-02-07 16:00:58,438 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 16:00:58,438 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612710058438, current=UP, previous=STARTING]
2021-02-07 16:00:58,438 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 16:00:58,438 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:00:58,470 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 16:00:58,641 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 16:00:58,641 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 16:00:58,798 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 16:00:59,032 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 16:00:59,048 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 16:00:59,048 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.398 seconds (JVM running for 6.462)
2021-02-07 16:00:59,110 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 16:00:59,329 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(2)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 16:00:59,329 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 16:00:59,344 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Completed initialization in 15 ms
2021-02-07 16:02:31,991 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-5] INFO - /setApiKey
2021-02-07 16:02:32,254 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-5] Successful set api key. User ID: 1
2021-02-07 16:03:03,258 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-7] INFO - /setApiKey
2021-02-07 16:03:03,268 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-7] Successful set api key. User ID: 1
2021-02-07 16:03:29,241 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-8] INFO - /getTransactions/{status}
2021-02-07 16:03:29,249 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-8] Successful set api key. User ID: 1
2021-02-07 16:05:58,246 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 16:10:58,270 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 16:15:58,271 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 16:18:36,103 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:18:36,135 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:18:36,556 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:18:37,197 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:18:37,275 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 62ms. Found 2 JPA repository interfaces.
2021-02-07 16:18:37,353 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 16:18:37,462 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 16:18:37,837 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 16:18:37,853 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:18:37,853 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 16:18:37,853 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 16:18:37,947 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 16:18:37,947 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1375 ms
2021-02-07 16:18:37,993 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:18:37,993 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:18:38,009 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@79624276
2021-02-07 16:18:38,134 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 16:18:38,150 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 16:18:38,181 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 16:18:38,228 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 16:18:38,306 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 16:18:38,400 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 16:18:38,509 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 16:18:38,525 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 16:18:38,681 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 16:18:38,681 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 16:18:38,811 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 16:18:38,811 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 16:18:39,083 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 16:18:39,083 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 16:18:39,164 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 16:18:39,164 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:18:39,164 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:18:39,235 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 16:18:40,090 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 16:18:40,121 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 16:18:40,183 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 16:18:40,199 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 16:18:40,215 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 16:18:40,324 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 16:18:40,324 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 16:18:40,324 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 16:18:40,340 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 16:18:40,340 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 16:18:40,340 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 16:18:40,340 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 16:18:40,543 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 16:18:40,543 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 16:18:40,543 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 16:18:40,558 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612711120543 with initial instances count: 3
2021-02-07 16:18:40,558 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 16:18:40,558 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612711120558, current=UP, previous=STARTING]
2021-02-07 16:18:40,558 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 16:18:40,558 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:18:40,589 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 16:18:40,777 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 16:18:40,777 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 16:18:40,949 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 16:18:41,152 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 16:18:41,167 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 16:18:41,167 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.565 seconds (JVM running for 6.528)
2021-02-07 16:18:41,230 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 16:18:41,900 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(3)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 16:18:41,900 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(3)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 16:18:41,916 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(3)-192.168.1.5] Completed initialization in 16 ms
2021-02-07 16:18:50,599 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-6] INFO - /getTransactions/{status}
2021-02-07 16:18:50,781 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-6] SQL Error: 1064, SQLState: 42000
2021-02-07 16:18:50,782 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-6] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 1' at line 1
2021-02-07 16:18:50,797 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 1' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2304)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2057)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2019)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy173.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$94e4812d.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:20:10,946 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:20:10,962 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:20:11,384 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:20:11,977 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:20:12,055 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 62ms. Found 2 JPA repository interfaces.
2021-02-07 16:20:12,149 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 16:20:12,243 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 16:20:12,633 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 16:20:12,649 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:20:12,649 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 16:20:12,649 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 16:20:12,758 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 16:20:12,758 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1374 ms
2021-02-07 16:20:12,805 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:20:12,805 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:20:12,821 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4f10d76d
2021-02-07 16:20:12,961 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 16:20:12,961 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 16:20:12,993 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 16:20:13,039 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 16:20:13,133 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 16:20:13,196 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 16:20:13,305 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 16:20:13,305 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 16:20:13,477 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 16:20:13,477 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 16:20:13,602 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 16:20:13,602 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 16:20:13,883 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 16:20:13,883 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 16:20:13,961 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 16:20:13,961 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:20:13,961 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:20:14,024 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 16:20:14,726 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 16:20:14,758 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 16:20:14,851 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 16:20:14,851 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 16:20:14,883 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 16:20:15,008 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 16:20:15,008 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 16:20:15,008 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 16:20:15,023 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 16:20:15,023 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 16:20:15,023 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 16:20:15,023 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 16:20:15,180 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 16:20:15,180 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 16:20:15,180 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 16:20:15,195 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612711215195 with initial instances count: 3
2021-02-07 16:20:15,195 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 16:20:15,195 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612711215195, current=UP, previous=STARTING]
2021-02-07 16:20:15,195 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:20:15,195 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 16:20:15,242 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 16:20:15,414 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 16:20:15,414 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 16:20:15,570 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 16:20:15,773 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 16:20:15,789 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 16:20:15,789 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.431 seconds (JVM running for 6.412)
2021-02-07 16:20:15,867 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 16:20:16,007 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(1)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 16:20:16,007 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(1)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 16:20:16,023 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(1)-192.168.1.5] Completed initialization in 16 ms
2021-02-07 16:20:20,195 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-6] INFO - /getTransactions/{status}
2021-02-07 16:20:20,377 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-6] SQL Error: 1064, SQLState: 42000
2021-02-07 16:20:20,377 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-6] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'NEW' && u.seller_info_id == 1' at line 1
2021-02-07 16:20:20,393 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'NEW' && u.seller_info_id == 1' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2304)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2057)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2019)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy173.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$d13d206d.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:20:21,627 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-4] INFO - /getTransactions/{status}
2021-02-07 16:20:21,636 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-4] SQL Error: 1064, SQLState: 42000
2021-02-07 16:20:21,636 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-4] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'NEW' && u.seller_info_id == 1' at line 1
2021-02-07 16:20:21,643 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-4] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'NEW' && u.seller_info_id == 1' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2304)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2057)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2019)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy173.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$d13d206d.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:20:36,868 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-7] INFO - /getTransactions/{status}
2021-02-07 16:20:36,878 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-7] SQL Error: 1064, SQLState: 42000
2021-02-07 16:20:36,878 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-7] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED' && u.seller_info_id == 1' at line 1
2021-02-07 16:20:36,881 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-7] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED' && u.seller_info_id == 1' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2304)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2057)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2019)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy173.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$d13d206d.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:20:38,259 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-2] INFO - /getTransactions/{status}
2021-02-07 16:20:38,266 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-2] SQL Error: 1064, SQLState: 42000
2021-02-07 16:20:38,266 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-2] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED' && u.seller_info_id == 1' at line 1
2021-02-07 16:20:38,267 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED' && u.seller_info_id == 1' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2304)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2057)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2019)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy173.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$d13d206d.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:21:31,728 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:21:31,759 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:21:32,165 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:21:32,759 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:21:32,821 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 59ms. Found 2 JPA repository interfaces.
2021-02-07 16:21:32,900 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 16:21:32,993 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 16:21:33,384 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 16:21:33,384 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:21:33,384 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 16:21:33,384 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 16:21:33,462 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 16:21:33,462 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1281 ms
2021-02-07 16:21:33,509 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:21:33,524 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:21:33,524 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@299cadbc
2021-02-07 16:21:33,649 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 16:21:33,665 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 16:21:33,696 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 16:21:33,727 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 16:21:33,837 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 16:21:33,931 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 16:21:34,040 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 16:21:34,055 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 16:21:34,196 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 16:21:34,196 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 16:21:34,321 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 16:21:34,321 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 16:21:34,602 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 16:21:34,602 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 16:21:34,665 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 16:21:34,696 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:21:34,696 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:21:34,743 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 16:21:35,477 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 16:21:35,508 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 16:21:35,555 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 16:21:35,571 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 16:21:35,586 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 16:21:35,727 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 16:21:35,727 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 16:21:35,727 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 16:21:35,727 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 16:21:35,727 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 16:21:35,727 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 16:21:35,727 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 16:21:35,899 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 16:21:35,899 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 16:21:35,899 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 16:21:35,899 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612711295899 with initial instances count: 3
2021-02-07 16:21:35,914 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 16:21:35,914 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612711295914, current=UP, previous=STARTING]
2021-02-07 16:21:35,914 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:21:35,914 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 16:21:35,946 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 16:21:36,164 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 16:21:36,164 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 16:21:36,367 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 16:21:36,571 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 16:21:36,571 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 16:21:36,571 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.322 seconds (JVM running for 6.331)
2021-02-07 16:21:36,633 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 16:21:36,919 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(2)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 16:21:36,919 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 16:21:36,935 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Completed initialization in 16 ms
2021-02-07 16:21:40,512 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-6] INFO - /getTransactions/{status}
2021-02-07 16:21:40,681 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-6] SQL Error: 1064, SQLState: 42000
2021-02-07 16:21:40,681 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-6] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED'' at line 1
2021-02-07 16:21:40,696 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED'' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2304)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2057)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2019)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy171.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$fb777158.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:21:42,469 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-3] INFO - /getTransactions/{status}
2021-02-07 16:21:42,479 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-3] SQL Error: 1064, SQLState: 42000
2021-02-07 16:21:42,479 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-3] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED'' at line 1
2021-02-07 16:21:42,486 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED'' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2304)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2057)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2019)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy171.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$fb777158.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:21:43,614 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-8] INFO - /getTransactions/{status}
2021-02-07 16:21:43,623 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-8] SQL Error: 1064, SQLState: 42000
2021-02-07 16:21:43,624 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-8] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED'' at line 1
2021-02-07 16:21:43,625 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-8] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED'' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2304)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2057)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2019)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy171.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$fb777158.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:22:29,455 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:22:29,502 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:22:29,970 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:22:30,580 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:22:30,642 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 57ms. Found 2 JPA repository interfaces.
2021-02-07 16:22:30,720 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 16:22:30,814 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 16:22:31,189 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 16:22:31,189 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:22:31,189 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 16:22:31,204 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 16:22:31,298 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 16:22:31,298 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1312 ms
2021-02-07 16:22:31,345 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:22:31,345 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:22:31,345 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@14738a1b
2021-02-07 16:22:31,470 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 16:22:31,486 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 16:22:31,533 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 16:22:31,564 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 16:22:31,657 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 16:22:31,736 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 16:22:31,829 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 16:22:31,845 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 16:22:32,017 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 16:22:32,017 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 16:22:32,142 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 16:22:32,142 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 16:22:32,423 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 16:22:32,439 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 16:22:32,564 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 16:22:32,595 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:22:32,595 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:22:32,626 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 16:22:33,313 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 16:22:33,345 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 16:22:33,391 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 16:22:33,407 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 16:22:33,423 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 16:22:33,532 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 16:22:33,532 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 16:22:33,532 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 16:22:33,548 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 16:22:33,548 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 16:22:33,548 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 16:22:33,548 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 16:22:33,704 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 16:22:33,704 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 16:22:33,704 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 16:22:33,720 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612711353704 with initial instances count: 3
2021-02-07 16:22:33,720 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 16:22:33,720 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612711353720, current=UP, previous=STARTING]
2021-02-07 16:22:33,720 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:22:33,720 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 16:22:33,751 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 16:22:33,938 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 16:22:33,938 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 16:22:34,094 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 16:22:34,298 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 16:22:34,313 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 16:22:34,313 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.335 seconds (JVM running for 6.273)
2021-02-07 16:22:34,360 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 16:22:34,704 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(1)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 16:22:34,704 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(1)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 16:22:34,719 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(1)-192.168.1.5] Completed initialization in 15 ms
2021-02-07 16:23:41,081 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:23:41,112 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:23:41,534 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:23:42,143 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:23:42,190 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 53ms. Found 2 JPA repository interfaces.
2021-02-07 16:23:42,284 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 16:23:42,362 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 16:23:42,738 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 16:23:42,754 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:23:42,754 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 16:23:42,754 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 16:23:42,847 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 16:23:42,847 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1297 ms
2021-02-07 16:23:42,894 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:23:42,894 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:23:42,910 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3b1c5ffd
2021-02-07 16:23:43,035 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 16:23:43,035 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 16:23:43,066 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 16:23:43,113 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 16:23:43,207 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 16:23:43,316 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 16:23:43,410 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 16:23:43,425 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 16:23:43,582 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 16:23:43,582 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 16:23:43,691 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 16:23:43,691 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 16:23:43,941 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 16:23:43,957 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 16:23:44,050 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:23:44,050 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:23:44,066 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 16:23:44,097 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 16:23:44,878 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 16:23:44,909 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 16:23:44,972 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 16:23:44,988 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 16:23:45,003 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 16:23:45,112 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 16:23:45,112 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 16:23:45,112 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 16:23:45,128 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 16:23:45,128 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 16:23:45,128 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 16:23:45,128 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 16:23:45,284 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 16:23:45,284 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 16:23:45,284 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 16:23:45,300 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612711425300 with initial instances count: 3
2021-02-07 16:23:45,300 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 16:23:45,300 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612711425300, current=UP, previous=STARTING]
2021-02-07 16:23:45,300 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 16:23:45,300 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:23:45,331 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 16:23:45,503 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 16:23:45,503 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 16:23:45,659 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 16:23:45,847 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 16:23:45,862 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 16:23:45,862 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.286 seconds (JVM running for 6.201)
2021-02-07 16:23:45,940 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 16:23:46,347 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(2)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 16:23:46,347 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 16:23:46,362 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Completed initialization in 15 ms
2021-02-07 16:24:07,864 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-3] INFO - /getTransactions/{status}
2021-02-07 16:24:08,042 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-3] SQL Error: 1064, SQLState: 42000
2021-02-07 16:24:08,042 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [https-jsse-nio-8081-exec-3] You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED' && u.seller_info_id == 1' at line 1
2021-02-07 16:24:08,058 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-3] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: could not extract ResultSet; SQL [n/a]; nested exception is org.hibernate.exception.SQLGrammarException: could not extract ResultSet] with root cause
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '== 'EXPIRED' && u.seller_info_id == 1' at line 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:1003)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:57)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2304)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2057)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2019)
	at org.hibernate.loader.Loader.doQuery(Loader.java:948)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:349)
	at org.hibernate.loader.Loader.doList(Loader.java:2850)
	at org.hibernate.loader.Loader.doList(Loader.java:2832)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2664)
	at org.hibernate.loader.Loader.list(Loader.java:2659)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2141)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1163)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:173)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1533)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy173.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$5bd3b0a8.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:25:37,318 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:25:37,350 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:25:37,756 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:25:38,381 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:25:38,443 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 58ms. Found 2 JPA repository interfaces.
2021-02-07 16:25:38,537 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 16:25:38,631 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 16:25:39,037 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 16:25:39,037 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:25:39,037 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 16:25:39,052 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 16:25:39,146 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 16:25:39,146 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1375 ms
2021-02-07 16:25:39,193 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:25:39,209 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:25:39,209 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@106166f0
2021-02-07 16:25:39,349 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 16:25:39,349 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 16:25:39,396 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 16:25:39,427 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 16:25:39,521 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 16:25:39,599 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 16:25:39,724 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 16:25:39,740 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 16:25:39,880 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 16:25:39,880 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 16:25:40,005 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 16:25:40,005 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 16:25:40,255 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 16:25:40,271 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 16:25:40,349 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:25:40,349 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:25:40,365 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 16:25:40,396 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 16:25:41,114 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 16:25:41,146 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 16:25:41,193 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 16:25:41,208 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 16:25:41,224 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 16:25:41,333 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 16:25:41,333 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 16:25:41,333 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 16:25:41,333 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 16:25:41,333 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 16:25:41,333 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 16:25:41,333 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 16:25:41,521 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 16:25:41,521 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 16:25:41,536 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 16:25:41,536 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612711541536 with initial instances count: 3
2021-02-07 16:25:41,536 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 16:25:41,536 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612711541536, current=UP, previous=STARTING]
2021-02-07 16:25:41,536 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:25:41,536 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 16:25:41,567 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 16:25:41,755 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 16:25:41,755 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 16:25:41,911 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 16:25:42,099 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 16:25:42,114 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 16:25:42,114 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.407 seconds (JVM running for 6.347)
2021-02-07 16:25:42,177 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 16:25:42,567 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(2)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 16:25:42,567 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 16:25:42,567 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Completed initialization in 0 ms
2021-02-07 16:25:49,089 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-6] INFO - /getTransactions/{status}
2021-02-07 16:25:49,267 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-6] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: Ordinal parameter not bound : 2; nested exception is org.hibernate.QueryException: Ordinal parameter not bound : 2] with root cause
org.hibernate.QueryException: Ordinal parameter not bound : 2
	at org.hibernate.query.internal.QueryParameterBindingsImpl.verifyParametersBound(QueryParameterBindingsImpl.java:213)
	at org.hibernate.query.internal.AbstractProducedQuery.beforeQuery(AbstractProducedQuery.java:1425)
	at org.hibernate.query.internal.NativeQueryImpl.beforeQuery(NativeQueryImpl.java:249)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1531)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy173.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$7af93fbd.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:25:50,724 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-2] INFO - /getTransactions/{status}
2021-02-07 16:25:50,734 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: Ordinal parameter not bound : 2; nested exception is org.hibernate.QueryException: Ordinal parameter not bound : 2] with root cause
org.hibernate.QueryException: Ordinal parameter not bound : 2
	at org.hibernate.query.internal.QueryParameterBindingsImpl.verifyParametersBound(QueryParameterBindingsImpl.java:213)
	at org.hibernate.query.internal.AbstractProducedQuery.beforeQuery(AbstractProducedQuery.java:1425)
	at org.hibernate.query.internal.NativeQueryImpl.beforeQuery(NativeQueryImpl.java:249)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1531)
	at org.hibernate.query.Query.getResultList(Query.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:126)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:154)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:142)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor$QueryMethodInvoker.invoke(QueryExecutorMethodInterceptor.java:195)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:152)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:130)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:80)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy173.findAllByStatusAndSellerId(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:205)
	at com.sun.proxy.$Proxy115.findAllByStatusAndSellerId(Unknown Source)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService.getTransactions(CryptocurrencyService.java:310)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$FastClassBySpringCGLIB$$ca1aa7f5.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.ws.sep.bitcoinservice.services.CryptocurrencyService$$EnhancerBySpringCGLIB$$7af93fbd.getTransactions(<generated>)
	at com.ws.sep.bitcoinservice.controllers.CryptocurrencyController.cancelSubscription(CryptocurrencyController.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:26:39,851 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:26:39,882 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:26:40,288 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:26:40,913 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:26:40,975 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 55ms. Found 2 JPA repository interfaces.
2021-02-07 16:26:41,053 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 16:26:41,147 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 16:26:41,631 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 16:26:41,647 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:26:41,647 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 16:26:41,647 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 16:26:41,741 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 16:26:41,741 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1437 ms
2021-02-07 16:26:41,788 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:26:41,788 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:26:41,803 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@23bd840a
2021-02-07 16:26:41,928 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 16:26:41,928 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 16:26:41,975 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 16:26:42,006 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 16:26:42,100 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 16:26:42,194 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 16:26:42,303 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 16:26:42,303 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 16:26:42,459 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 16:26:42,459 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 16:26:42,553 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 16:26:42,553 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 16:26:42,819 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 16:26:42,834 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 16:26:42,928 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:26:42,928 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:26:42,944 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 16:26:43,006 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 16:26:43,709 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 16:26:43,725 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 16:26:43,787 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 16:26:43,787 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 16:26:43,803 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 16:26:43,928 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 16:26:43,928 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 16:26:43,928 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 16:26:43,928 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 16:26:43,928 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 16:26:43,928 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 16:26:43,928 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 16:26:44,100 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 16:26:44,100 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 16:26:44,100 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 16:26:44,100 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612711604100 with initial instances count: 3
2021-02-07 16:26:44,100 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 16:26:44,100 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612711604100, current=UP, previous=STARTING]
2021-02-07 16:26:44,115 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:26:44,115 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 16:26:44,146 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 16:26:44,318 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 16:26:44,318 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 16:26:44,474 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 16:26:44,662 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 16:26:44,662 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 16:26:44,662 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.284 seconds (JVM running for 6.191)
2021-02-07 16:26:44,724 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 16:26:45,131 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(2)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 16:26:45,131 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 16:26:45,131 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Completed initialization in 0 ms
2021-02-07 16:27:16,379 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:27:16,410 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:27:16,973 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:27:17,633 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:27:17,695 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 59ms. Found 2 JPA repository interfaces.
2021-02-07 16:27:22,527 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:27:22,559 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:27:22,965 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:27:23,590 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:27:23,652 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 59ms. Found 2 JPA repository interfaces.
2021-02-07 16:27:23,730 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 16:27:23,824 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 16:27:24,214 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 16:27:24,214 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:27:24,214 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 16:27:24,214 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 16:27:24,324 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 16:27:24,324 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1344 ms
2021-02-07 16:27:24,371 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:27:24,386 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:27:24,386 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@35477283
2021-02-07 16:27:24,574 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 16:27:24,574 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 16:27:24,621 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 16:27:24,667 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 16:27:24,808 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 16:27:24,902 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 16:27:24,996 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 16:27:25,011 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 16:27:25,183 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 16:27:25,183 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 16:27:25,308 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 16:27:25,308 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 16:27:25,545 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 16:27:25,560 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 16:27:25,654 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 16:27:25,670 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:27:25,670 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:27:25,717 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 16:27:26,420 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 16:27:26,451 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 16:27:26,513 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 16:27:26,513 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 16:27:26,529 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 16:27:26,654 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 16:27:26,654 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 16:27:26,654 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 16:27:26,670 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 16:27:26,670 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 16:27:26,670 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 16:27:26,670 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 16:27:26,857 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 16:27:26,857 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 16:27:26,857 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 16:27:26,857 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612711646857 with initial instances count: 3
2021-02-07 16:27:26,873 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 16:27:26,873 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612711646873, current=UP, previous=STARTING]
2021-02-07 16:27:26,873 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:27:26,873 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 16:27:26,904 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 16:27:27,091 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 16:27:27,091 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 16:27:27,247 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 16:27:27,451 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 16:27:27,451 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 16:27:27,451 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.413 seconds (JVM running for 6.344)
2021-02-07 16:27:27,513 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 16:27:27,794 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(1)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 16:27:27,794 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(1)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 16:27:27,794 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(1)-192.168.1.5] Completed initialization in 0 ms
2021-02-07 16:27:32,566 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-9] INFO - /getTransactions/{status}
2021-02-07 16:27:32,753 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-9] Successful set api key. User ID: 1
2021-02-07 16:27:32,827 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [https-jsse-nio-8081-exec-9] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:550)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:440)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:210)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:27:32,832 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-9] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"])] with root cause
java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:800)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:698)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:621)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:773)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
2021-02-07 16:28:50,042 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-2] INFO - /getTransactions/{status}
2021-02-07 16:28:50,052 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-2] Successful set api key. User ID: 1
2021-02-07 16:28:50,074 WARN org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver [https-jsse-nio-8081-exec-2] Failure while trying to resolve exception [org.springframework.http.converter.HttpMessageNotWritableException]
java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:472)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:550)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:440)
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:210)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-02-07 16:28:50,081 ERROR org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8081-exec-2] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["cryptocurrencyPayment"]->com.ws.sep.bitcoinservice.model.CryptocurrencyPayment["payments"]->org.hibernate.collection.internal.PersistentSet[0]->com.ws.sep.bitcoinservice.model.PaymentInformation["createdAt"])] with root cause
java.lang.StackOverflowError: null
	at java.base/java.time.LocalDateTime.query(LocalDateTime.java:1599)
	at java.base/java.time.format.DateTimePrintContext.adjust(DateTimePrintContext.java:132)
	at java.base/java.time.format.DateTimePrintContext.<init>(DateTimePrintContext.java:119)
	at java.base/java.time.format.DateTimeFormatter.formatTo(DateTimeFormatter.java:1841)
	at java.base/java.time.format.DateTimeFormatter.format(DateTimeFormatter.java:1817)
	at java.base/java.time.LocalDateTime.format(LocalDateTime.java:1752)
	at com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.serialize(LocalDateTimeSerializer.java:77)
	at com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer.serialize(LocalDateTimeSerializer.java:37)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:755)
2021-02-07 16:32:18,003 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 16:32:18,050 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 16:32:18,753 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 16:32:19,565 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 16:32:19,643 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 72ms. Found 2 JPA repository interfaces.
2021-02-07 16:32:19,753 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 16:32:19,893 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 16:32:20,393 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 16:32:20,393 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:32:20,393 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 16:32:20,409 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 16:32:20,534 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 16:32:20,534 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1765 ms
2021-02-07 16:32:20,612 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:32:20,628 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:32:20,628 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2cebf20
2021-02-07 16:32:20,815 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 16:32:20,815 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 16:32:20,862 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 16:32:20,909 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 16:32:21,034 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 16:32:21,143 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 16:32:21,284 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 16:32:21,284 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 16:32:21,487 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 16:32:21,487 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 16:32:21,627 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 16:32:21,627 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 16:32:22,018 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 16:32:22,034 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 16:32:22,127 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 16:32:22,158 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 16:32:22,158 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 16:32:22,205 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 16:32:23,111 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 16:32:23,143 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 16:32:23,221 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 16:32:23,236 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 16:32:23,252 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 16:32:23,393 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 16:32:23,393 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 16:32:23,393 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 16:32:23,408 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 16:32:23,408 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 16:32:23,408 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 16:32:23,408 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 16:32:23,643 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 16:32:23,643 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 16:32:23,643 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 16:32:23,643 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612711943643 with initial instances count: 3
2021-02-07 16:32:23,658 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 16:32:23,658 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612711943658, current=UP, previous=STARTING]
2021-02-07 16:32:23,658 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 16:32:23,658 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 16:32:23,689 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 16:32:24,017 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 16:32:24,017 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 16:32:24,294 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 16:32:24,542 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 16:32:24,557 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 16:32:24,557 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 7.303 seconds (JVM running for 8.674)
2021-02-07 16:32:24,634 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 16:32:25,058 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(2)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 16:32:25,058 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 16:32:25,058 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Completed initialization in 0 ms
2021-02-07 16:32:43,761 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-6] INFO - /getTransactions/{status}
2021-02-07 16:32:44,029 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-6] Successful set api key. User ID: 1
2021-02-07 16:37:23,436 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 16:42:23,459 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 16:47:23,479 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 16:52:23,490 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 16:57:23,503 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:00:40,622 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 17:00:40,651 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 17:00:41,068 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 17:00:41,703 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 17:00:41,767 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 59ms. Found 2 JPA repository interfaces.
2021-02-07 17:00:41,853 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 17:00:41,946 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 17:00:42,322 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 17:00:42,328 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 17:00:42,328 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 17:00:42,333 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 17:00:42,422 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 17:00:42,422 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1340 ms
2021-02-07 17:00:42,472 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 17:00:42,478 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 17:00:42,484 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@70d346b4
2021-02-07 17:00:42,611 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 17:00:42,617 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 17:00:42,653 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 17:00:42,690 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 17:00:42,784 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 17:00:42,874 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 17:00:42,983 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 17:00:42,994 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 17:00:43,149 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 17:00:43,149 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 17:00:43,268 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 17:00:43,268 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 17:00:43,535 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 17:00:43,541 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 17:00:43,617 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 17:00:43,641 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 17:00:43,641 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 17:00:43,680 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 17:00:44,366 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 17:00:44,392 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 17:00:44,449 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 17:00:44,454 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 17:00:44,473 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 17:00:44,588 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 17:00:44,588 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 17:00:44,588 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 17:00:44,594 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 17:00:44,594 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 17:00:44,594 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 17:00:44,594 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 17:00:44,775 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 17:00:44,777 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 17:00:44,778 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 17:00:44,781 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612713644780 with initial instances count: 3
2021-02-07 17:00:44,788 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 17:00:44,788 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612713644788, current=UP, previous=STARTING]
2021-02-07 17:00:44,789 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 17:00:44,789 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 17:00:44,821 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 17:00:45,023 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 17:00:45,024 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 17:00:45,216 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 17:00:45,463 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 17:00:45,481 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 17:00:45,483 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.465 seconds (JVM running for 6.468)
2021-02-07 17:00:45,559 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 17:00:45,989 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(5)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 17:00:45,989 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(5)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 17:00:45,994 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(5)-192.168.1.5] Completed initialization in 5 ms
2021-02-07 17:01:15,368 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-6] INFO - /getTransactions/{status}
2021-02-07 17:01:15,550 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-6] Successful get list of payments information. User ID: 1
2021-02-07 17:01:55,638 INFO com.ws.sep.bitcoinservice.controllers.CryptocurrencyController [https-jsse-nio-8081-exec-10] INFO - /getTransactions/{status}
2021-02-07 17:01:55,646 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-10] Successful get list of payments information. User ID: 1
2021-02-07 17:05:44,607 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:10:44,632 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:15:44,639 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:20:44,657 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:25:44,670 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:29:43,510 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-02-07 17:29:43,538 INFO org.springframework.boot.logging.DeferredLog [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2021-02-07 17:29:43,960 INFO org.springframework.boot.SpringApplication [restartedMain] No active profile set, falling back to default profiles: default
2021-02-07 17:29:44,559 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-02-07 17:29:44,623 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 60ms. Found 2 JPA repository interfaces.
2021-02-07 17:29:44,710 WARN org.springframework.boot.actuate.endpoint.EndpointId [restartedMain] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-02-07 17:29:44,804 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=36a97c5f-7786-3958-8a31-d12f5035127b
2021-02-07 17:29:45,187 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat initialized with port(s): 8081 (https)
2021-02-07 17:29:45,193 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 17:29:45,193 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting service [Tomcat]
2021-02-07 17:29:45,199 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-02-07 17:29:45,313 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Initializing Spring embedded WebApplicationContext
2021-02-07 17:29:45,313 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1340 ms
2021-02-07 17:29:45,390 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 17:29:45,398 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 17:29:45,405 INFO com.netflix.config.DynamicPropertyFactory [restartedMain] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@687353a5
2021-02-07 17:29:45,580 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'applicationTaskExecutor'
2021-02-07 17:29:45,589 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [restartedMain] Initializing ExecutorService 'taskScheduler'
2021-02-07 17:29:45,637 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-02-07 17:29:45,683 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-02-07 17:29:45,768 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-02-07 17:29:45,842 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-02-07 17:29:45,949 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-02-07 17:29:45,959 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-02-07 17:29:46,131 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON encoding codec LegacyJacksonJson
2021-02-07 17:29:46,131 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using JSON decoding codec LegacyJacksonJson
2021-02-07 17:29:46,251 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML encoding codec XStreamXml
2021-02-07 17:29:46,251 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [restartedMain] Using XML decoding codec XStreamXml
2021-02-07 17:29:46,504 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-02-07 17:29:46,511 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-02-07 17:29:46,595 WARN org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [task-2] Unable to start LiveReload server
2021-02-07 17:29:46,620 WARN com.netflix.config.sources.URLConfigurationSource [restartedMain] No URLs will be polled as dynamic configuration sources.
2021-02-07 17:29:46,620 INFO com.netflix.config.sources.URLConfigurationSource [restartedMain] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-02-07 17:29:46,659 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-02-07 17:29:47,375 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [restartedMain] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-02-07 17:29:47,401 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-02-07 17:29:47,458 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [restartedMain] Setting initial instance status as: STARTING
2021-02-07 17:29:47,463 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Initializing Eureka in region us-east-1
2021-02-07 17:29:47,483 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [restartedMain] Resolving eureka endpoints via configuration
2021-02-07 17:29:47,600 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Disable delta property : false
2021-02-07 17:29:47,600 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Single vip registry refresh property : null
2021-02-07 17:29:47,600 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Force full registry fetch : false
2021-02-07 17:29:47,606 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application is null : false
2021-02-07 17:29:47,606 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Registered Applications size is zero : true
2021-02-07 17:29:47,606 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Application version is -1: true
2021-02-07 17:29:47,606 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Getting all instance registry info from the eureka server
2021-02-07 17:29:47,793 INFO com.netflix.discovery.DiscoveryClient [restartedMain] The response status is 200
2021-02-07 17:29:47,795 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Starting heartbeat executor: renew interval is: 30
2021-02-07 17:29:47,797 INFO com.netflix.discovery.InstanceInfoReplicator [restartedMain] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-02-07 17:29:47,799 INFO com.netflix.discovery.DiscoveryClient [restartedMain] Discovery Client initialized at timestamp 1612715387799 with initial instances count: 3
2021-02-07 17:29:47,807 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [restartedMain] Registering application BITCOIN-SERVICE with eureka with status UP
2021-02-07 17:29:47,807 INFO com.netflix.discovery.DiscoveryClient$3 [restartedMain] Saw local status change event StatusChangeEvent [timestamp=1612715387807, current=UP, previous=STARTING]
2021-02-07 17:29:47,808 INFO org.apache.juli.logging.DirectJDKLog [restartedMain] Starting ProtocolHandler ["https-jsse-nio-8081"]
2021-02-07 17:29:47,809 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081: registering service...
2021-02-07 17:29:47,847 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_BITCOIN-SERVICE/HP:bitcoin-service:8081 - registration status: 204
2021-02-07 17:29:48,019 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [restartedMain] Tomcat started on port(s): 8081 (https) with context path ''
2021-02-07 17:29:48,020 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [restartedMain] Updating port to 8081
2021-02-07 17:29:48,176 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-02-07 17:29:48,363 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [restartedMain] Spring Data repositories initialized!
2021-02-07 17:29:48,374 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] Start scheduling
2021-02-07 17:29:48,376 INFO org.springframework.boot.StartupInfoLogger [restartedMain] Started BitcoinServiceApplication in 5.369 seconds (JVM running for 6.278)
2021-02-07 17:29:48,433 INFO com.ws.sep.bitcoinservice.helperMethods.SchedulingMethods [scheduling-1] End scheduling
2021-02-07 17:29:48,651 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(2)-192.168.1.5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-02-07 17:29:48,651 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Initializing Servlet 'dispatcherServlet'
2021-02-07 17:29:48,656 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(2)-192.168.1.5] Completed initialization in 4 ms
2021-02-07 17:30:02,878 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-6] Successful get list of payments information. User ID: 1
2021-02-07 17:30:26,452 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-8] Successful get list of payments information. User ID: 1
2021-02-07 17:30:31,168 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-9] Successful get list of payments information. User ID: 1
2021-02-07 17:30:36,002 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-10] Successful get list of payments information. User ID: 1
2021-02-07 17:30:42,398 INFO com.ws.sep.bitcoinservice.services.CryptocurrencyService [https-jsse-nio-8081-exec-1] Successful get list of payments information. User ID: 1
2021-02-07 17:34:47,622 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:39:47,625 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:44:47,647 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:49:47,671 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:54:47,681 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-02-07 17:59:47,692 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
