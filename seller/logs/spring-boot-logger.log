2021-01-10 14:24:53,933 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-01-10 14:24:54,849 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-01-10 14:24:56,022 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-01-10 14:24:56,117 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 88ms. Found 3 JPA repository interfaces.
2021-01-10 14:24:56,324 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-01-10 14:24:56,512 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=1fcd5db8-b656-3780-b378-6702082dec77
2021-01-10 14:24:57,218 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8084 (https)
2021-01-10 14:24:57,231 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 14:24:57,232 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-01-10 14:24:57,233 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-01-10 14:24:57,547 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-01-10 14:24:57,547 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 2669 ms
2021-01-10 14:24:57,633 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 14:24:57,634 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 14:24:57,649 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1805383
2021-01-10 14:24:58,074 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-10 14:24:58,348 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-01-10 14:24:58,487 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-01-10 14:24:58,715 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-01-10 14:24:59,092 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-10 14:24:59,796 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-01-10 14:25:00,284 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-01-10 14:25:00,310 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-01-10 14:25:02,335 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-10 14:25:02,345 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-10 14:25:02,445 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-01-10 14:25:02,483 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7109b603, org.springframework.security.web.context.SecurityContextPersistenceFilter@1e8bccfb, org.springframework.security.web.header.HeaderWriterFilter@11bfd751, org.springframework.web.filter.CorsFilter@76b642aa, org.springframework.security.web.authentication.logout.LogoutFilter@537b3be1, com.ws.sep.seller.security.JwtAuthenticationFilter@48b3b1b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1f1fbc9f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@338a4c61, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@29b5e7db, org.springframework.security.web.session.SessionManagementFilter@3e6acec2, org.springframework.security.web.access.ExceptionTranslationFilter@718f3088, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50bb1c1f]
2021-01-10 14:25:04,548 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2021-01-10 14:25:04,549 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2021-01-10 14:25:05,072 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2021-01-10 14:25:05,072 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2021-01-10 14:25:06,445 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 14:25:06,446 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 14:25:10,241 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-01-10 14:25:10,521 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2021-01-10 14:25:10,541 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2021-01-10 14:25:10,608 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2021-01-10 14:25:11,281 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2021-01-10 14:25:11,281 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2021-01-10 14:25:11,282 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2021-01-10 14:25:11,282 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2021-01-10 14:25:11,282 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2021-01-10 14:25:11,283 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2021-01-10 14:25:11,283 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2021-01-10 14:25:12,055 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2021-01-10 14:25:12,059 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2021-01-10 14:25:12,063 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-01-10 14:25:12,070 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1610285112068 with initial instances count: 1
2021-01-10 14:25:12,073 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SELLER with eureka with status UP
2021-01-10 14:25:12,074 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1610285112074, current=UP, previous=STARTING]
2021-01-10 14:25:12,077 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 14:25:12,139 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-B4MQFE7:seller:8084: registering service...
2021-01-10 14:25:12,198 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-B4MQFE7:seller:8084 - registration status: 204
2021-01-10 14:25:12,811 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8084 (https) with context path ''
2021-01-10 14:25:12,812 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8084
2021-01-10 14:25:13,760 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-01-10 14:25:14,398 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2021-01-10 14:25:14,422 INFO org.springframework.boot.StartupInfoLogger [main] Started SellerApplication in 21.486 seconds (JVM running for 23.327)
2021-01-10 14:25:16,732 INFO org.apache.juli.logging.DirectJDKLog [RMI TCP Connection(4)-192.168.0.10] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-10 14:25:16,733 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(4)-192.168.0.10] Initializing Servlet 'dispatcherServlet'
2021-01-10 14:25:16,744 INFO org.springframework.web.servlet.FrameworkServlet [RMI TCP Connection(4)-192.168.0.10] Completed initialization in 11 ms
2021-01-10 14:30:11,290 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 14:35:11,294 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 14:40:11,297 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 14:45:11,299 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 14:50:11,302 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 14:55:11,303 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:00:11,305 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:05:11,306 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:10:11,310 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:15:11,311 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:20:11,313 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:25:11,315 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:30:11,317 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:35:11,318 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:38:59,739 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-4] INFO - /signin
2021-01-10 15:39:00,101 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 15:39:00,185 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 15:39:00,217 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 15:39:00,530 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-4] Logged in to the system.
2021-01-10 15:39:00,839 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 15:40:11,320 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:41:01,472 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-2] INFO - /signin
2021-01-10 15:41:01,473 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 15:41:01,475 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 15:41:01,477 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 15:41:01,555 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-2] Logged in to the system.
2021-01-10 15:41:01,588 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 15:45:11,323 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:50:11,327 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:55:11,327 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 15:58:41,847 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-6] INFO - /signin
2021-01-10 15:58:41,852 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 15:58:41,862 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 15:58:41,868 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 15:58:41,947 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-6] Logged in to the system.
2021-01-10 15:58:42,145 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 15:58:54,828 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-10] INFO - /signin
2021-01-10 15:58:54,829 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 15:58:54,832 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 15:58:54,833 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 15:58:54,910 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-10] Logged in to the system.
2021-01-10 15:58:54,938 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 16:00:11,330 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:00:38,279 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-3] INFO - /signin
2021-01-10 16:00:38,280 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 16:00:38,283 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 16:00:38,285 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 16:00:38,365 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-3] Logged in to the system.
2021-01-10 16:00:38,467 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 16:01:57,594 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-8] INFO - /signin
2021-01-10 16:01:57,595 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 16:01:57,596 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 16:01:57,600 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 16:01:57,678 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-8] Logged in to the system.
2021-01-10 16:01:57,714 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 16:04:15,941 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-4] INFO - /signin
2021-01-10 16:04:15,942 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 16:04:15,944 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 16:04:15,946 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 16:04:16,023 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-4] Logged in to the system.
2021-01-10 16:04:16,033 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 16:05:11,331 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:05:51,494 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-1] INFO - /signin
2021-01-10 16:05:51,497 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 16:05:51,500 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 16:05:51,502 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 16:05:51,580 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-1] Logged in to the system.
2021-01-10 16:05:51,617 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 16:08:38,643 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-7] INFO - /signin
2021-01-10 16:08:38,644 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 16:08:38,646 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 16:08:38,647 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 16:08:38,724 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-7] Logged in to the system.
2021-01-10 16:08:38,759 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 16:09:14,878 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-2] INFO - /signin
2021-01-10 16:09:14,878 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 16:09:14,880 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 16:09:14,881 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 16:09:14,957 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-2] Logged in to the system.
2021-01-10 16:09:14,977 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 16:10:05,422 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-9] INFO - /signin
2021-01-10 16:10:05,423 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 16:10:05,425 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 16:10:05,426 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 16:10:05,501 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-9] Logged in to the system.
2021-01-10 16:10:05,595 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 16:10:11,342 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:10:59,909 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-4] INFO - /signin
2021-01-10 16:10:59,910 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 16:10:59,911 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 16:10:59,913 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 16:10:59,990 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-4] Logged in to the system.
2021-01-10 16:11:00,001 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 16:15:11,343 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:20:11,345 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:25:11,347 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:30:08,442 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:35:08,443 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:40:08,444 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:45:08,446 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:50:08,449 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 16:55:08,451 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 17:00:08,451 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 17:05:08,453 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 17:10:08,465 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 17:15:08,478 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 17:56:32,006 WARN com.zaxxer.hikari.pool.HikariPool$HouseKeeper [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=40m34s113ms954Âµs200ns).
2021-01-10 18:00:12,573 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:05:12,577 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:10:12,579 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:10:20,413 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [https-jsse-nio-8084-exec-5] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2021-01-10 18:10:20,817 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-7] INFO - /signup
2021-01-10 18:10:21,004 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as col_0_0_ from seller seller0_ where seller0_.email=? limit ?
2021-01-10 18:10:21,067 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as col_0_0_ from seller seller0_ where seller0_.pib=? limit ?
2021-01-10 18:10:21,406 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select role0_.id as id1_0_, role0_.name as name2_0_ from roles role0_ where role0_.name=?
2021-01-10 18:10:21,543 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] insert into seller (created_at, email, password, pib) values (?, ?, ?, ?)
2021-01-10 18:10:21,603 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] insert into seller_roles (seller_id, role_id) values (?, ?)
2021-01-10 18:10:21,617 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 18:10:21,700 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-7] Logged in to the system.
2021-01-10 18:10:21,700 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-7] Register : Successful registration in the system.
2021-01-10 18:15:12,580 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:16:05,162 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-5] INFO - /signin
2021-01-10 18:16:05,169 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 18:16:05,181 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 18:16:05,194 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 18:16:05,282 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-5] Logged in to the system.
2021-01-10 18:16:15,253 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 18:16:15,285 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 18:16:15,359 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-7] Payment controller - getSellerPayments.
2021-01-10 18:16:15,364 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 18:16:15,367 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-7] Successfully returned type of payment.
2021-01-10 18:16:25,539 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 18:16:26,073 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 18:16:26,088 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 18:16:26,095 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 18:16:26,104 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select paymenttyp0_.id as id1_4_, paymenttyp0_.type as type2_4_ from types paymenttyp0_ where paymenttyp0_.type=?
2021-01-10 18:16:26,127 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] insert into seller_types (seller_id, type_id) values (?, ?)
2021-01-10 18:16:26,202 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-8] Successful seller update.
2021-01-10 18:16:49,804 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 18:16:49,817 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 18:16:49,821 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-2] Payment controller - getSellerPayments.
2021-01-10 18:16:49,823 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 18:16:49,825 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-2] Successfully returned type of payment.
2021-01-10 18:20:12,581 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:25:12,583 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:30:12,585 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:35:12,588 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:40:12,589 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:45:12,590 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:50:12,593 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 18:55:12,595 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:00:12,597 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:05:12,600 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:09:46,070 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-9] INFO - /signin
2021-01-10 19:09:46,127 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:09:46,181 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:09:46,190 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:09:46,280 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-9] Logged in to the system.
2021-01-10 19:09:46,462 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:09:46,733 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:09:46,745 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:09:46,762 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:09:46,765 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select paymenttyp0_.id as id1_4_, paymenttyp0_.type as type2_4_ from types paymenttyp0_ where paymenttyp0_.type=?
2021-01-10 19:09:46,770 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] insert into seller_types (seller_id, type_id) values (?, ?)
2021-01-10 19:09:46,860 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-6] Successful seller update.
2021-01-10 19:10:12,600 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:15:08,355 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-2] INFO - /signin
2021-01-10 19:15:08,365 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:15:08,367 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:15:08,369 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:15:08,451 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-2] Logged in to the system.
2021-01-10 19:15:08,711 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:15:12,603 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:15:45,283 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-7] INFO - /signin
2021-01-10 19:15:45,286 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:15:45,288 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:15:45,289 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:15:45,371 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-7] Logged in to the system.
2021-01-10 19:15:45,389 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:20:12,604 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:21:39,250 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-4] INFO - /signin
2021-01-10 19:21:39,258 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:21:39,271 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:21:39,275 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:21:39,370 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-4] Logged in to the system.
2021-01-10 19:21:39,420 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:22:39,084 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-5] INFO - /signin
2021-01-10 19:22:39,085 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:22:39,087 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:22:39,089 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:22:39,190 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-5] Logged in to the system.
2021-01-10 19:22:39,213 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:25:12,605 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:30:12,607 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:35:12,609 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:40:12,610 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:41:56,455 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-8] INFO - /signin
2021-01-10 19:41:56,458 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:41:56,467 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:41:56,471 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:41:56,559 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-8] Logged in to the system.
2021-01-10 19:41:56,600 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:42:35,422 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-9] INFO - /signin
2021-01-10 19:42:35,423 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:42:35,428 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:42:35,430 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:42:35,507 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-9] Logged in to the system.
2021-01-10 19:42:35,591 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:42:55,382 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-7] INFO - /signin
2021-01-10 19:42:55,420 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:42:55,421 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:42:55,422 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:42:55,502 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-7] Logged in to the system.
2021-01-10 19:42:55,511 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:44:45,862 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-4] INFO - /signin
2021-01-10 19:44:45,863 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:44:45,865 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:44:45,867 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:44:45,942 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-4] Logged in to the system.
2021-01-10 19:44:46,029 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:44:58,990 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-5] INFO - /signin
2021-01-10 19:44:58,991 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:44:58,994 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:44:58,996 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:44:59,082 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-5] Logged in to the system.
2021-01-10 19:44:59,098 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:45:12,620 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 19:45:36,665 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-6] INFO - /signin
2021-01-10 19:45:36,666 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:45:36,669 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:45:36,672 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:45:36,748 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-6] Logged in to the system.
2021-01-10 19:45:36,802 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:45:46,313 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-9] INFO - /signin
2021-01-10 19:45:46,314 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 19:45:46,316 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 19:45:46,318 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 19:45:46,403 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-9] Logged in to the system.
2021-01-10 19:45:46,410 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 19:50:12,622 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 22:22:49,396 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-01-10 22:22:56,065 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-01-10 22:23:01,046 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-01-10 22:23:01,913 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 836ms. Found 3 JPA repository interfaces.
2021-01-10 22:23:02,642 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-01-10 22:23:03,455 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=1fcd5db8-b656-3780-b378-6702082dec77
2021-01-10 22:23:05,347 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8084 (https)
2021-01-10 22:23:05,397 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:23:05,398 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-01-10 22:23:05,399 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-01-10 22:23:06,245 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-01-10 22:23:06,246 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 9898 ms
2021-01-10 22:23:06,755 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:23:06,756 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:23:06,792 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@31f5b923
2021-01-10 22:23:07,211 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-10 22:23:07,696 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-01-10 22:23:08,057 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-01-10 22:23:08,222 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-01-10 22:23:08,590 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-10 22:23:09,124 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-01-10 22:23:10,620 ERROR com.zaxxer.hikari.pool.HikariPool [task-1] HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-01-10 22:23:10,622 WARN org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [task-1] HHH000342: Could not obtain connection to query metadata
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-01-10 22:23:10,792 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-01-10 22:23:12,597 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-01-10 22:23:13,644 ERROR com.zaxxer.hikari.pool.HikariPool [task-1] HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:333)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2021-01-10 22:23:13,646 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [task-1] SQL Error: 1045, SQLState: 28000
2021-01-10 22:23:13,647 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [task-1] Access denied for user 'root'@'localhost' (using password: YES)
2021-01-10 22:23:13,713 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-01-10 22:23:13,793 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@723b8eff, org.springframework.security.web.context.SecurityContextPersistenceFilter@4cb82b09, org.springframework.security.web.header.HeaderWriterFilter@191774d6, org.springframework.web.filter.CorsFilter@3987a1e8, org.springframework.security.web.authentication.logout.LogoutFilter@1324e70a, com.ws.sep.seller.security.JwtAuthenticationFilter@25f14e93, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@b68932b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1136122a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20d65767, org.springframework.security.web.session.SessionManagementFilter@6104691c, org.springframework.security.web.access.ExceptionTranslationFilter@7305cfb1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@237aba92]
2021-01-10 22:23:15,199 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2021-01-10 22:23:15,200 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2021-01-10 22:23:15,587 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2021-01-10 22:23:15,587 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2021-01-10 22:23:16,574 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:23:16,574 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:23:19,401 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-01-10 22:23:19,732 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2021-01-10 22:23:19,758 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2021-01-10 22:23:19,834 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2021-01-10 22:23:21,140 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2021-01-10 22:23:21,140 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2021-01-10 22:23:21,141 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2021-01-10 22:23:21,141 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2021-01-10 22:23:21,141 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2021-01-10 22:23:21,142 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2021-01-10 22:23:21,142 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2021-01-10 22:23:22,176 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2021-01-10 22:23:22,180 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2021-01-10 22:23:22,187 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-01-10 22:23:22,199 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1610313802197 with initial instances count: 0
2021-01-10 22:23:22,207 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SELLER with eureka with status UP
2021-01-10 22:23:22,208 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1610313802208, current=UP, previous=STARTING]
2021-01-10 22:23:22,235 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:23:22,256 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084: registering service...
2021-01-10 22:23:22,647 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084 - registration status: 204
2021-01-10 22:23:22,828 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8084 (https) with context path ''
2021-01-10 22:23:22,830 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8084
2021-01-10 22:23:23,210 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-01-10 22:23:23,467 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IPaymentTypeRepository' defined in com.ws.sep.seller.repositories.IPaymentTypeRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaMappingContext' while setting bean property 'mappingContext'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2021-01-10 22:23:23,563 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2021-01-10 22:23:23,564 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [main] Invocation of destroy method failed on bean with name 'entityManagerFactory': javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2021-01-10 22:23:23,564 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2021-01-10 22:23:23,575 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2021-01-10 22:23:26,590 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2021-01-10 22:23:26,607 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084 - deregister  status: 200
2021-01-10 22:23:26,674 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2021-01-10 22:23:26,713 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:23:26,930 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2021-01-10 22:23:26,934 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:23:26,982 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:23:27,010 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2021-01-10 22:23:27,014 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'IPaymentTypeRepository' defined in com.ws.sep.seller.repositories.IPaymentTypeRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaMappingContext' while setting bean property 'mappingContext'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1697)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1442)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:612)
	at org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent(DeferredRepositoryInitializationListener.java:51)
	at org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent(DeferredRepositoryInitializationListener.java:36)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:898)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.ws.sep.seller.SellerApplication.main(SellerApplication.java:38)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 28 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:333)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	... 4 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 19 common frames omitted
2021-01-10 22:24:51,374 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-01-10 22:24:52,896 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-01-10 22:24:55,052 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-01-10 22:24:55,489 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 421ms. Found 3 JPA repository interfaces.
2021-01-10 22:24:55,801 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-01-10 22:24:56,303 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=1fcd5db8-b656-3780-b378-6702082dec77
2021-01-10 22:24:57,586 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8084 (https)
2021-01-10 22:24:57,622 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:24:57,629 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-01-10 22:24:57,631 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-01-10 22:24:58,203 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-01-10 22:24:58,204 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 5271 ms
2021-01-10 22:24:58,745 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:24:58,746 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:24:58,821 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@734cf881
2021-01-10 22:24:59,116 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-10 22:24:59,279 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-01-10 22:24:59,335 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-01-10 22:24:59,418 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-01-10 22:24:59,641 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-10 22:24:59,897 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-01-10 22:25:00,565 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-01-10 22:25:00,605 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-01-10 22:25:01,859 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-01-10 22:25:01,896 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20d65767, org.springframework.security.web.context.SecurityContextPersistenceFilter@195cbf5e, org.springframework.security.web.header.HeaderWriterFilter@443253a6, org.springframework.web.filter.CorsFilter@250e8712, org.springframework.security.web.authentication.logout.LogoutFilter@6f976c, com.ws.sep.seller.security.JwtAuthenticationFilter@4c02899, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49665f92, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bccef9f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@becb93a, org.springframework.security.web.session.SessionManagementFilter@726ef6aa, org.springframework.security.web.access.ExceptionTranslationFilter@582c1f8d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6978a32a]
2021-01-10 22:25:02,907 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2021-01-10 22:25:02,908 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2021-01-10 22:25:02,963 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-10 22:25:02,994 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-10 22:25:03,178 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2021-01-10 22:25:03,179 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2021-01-10 22:25:03,861 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:25:03,862 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:25:04,687 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-01-10 22:25:04,867 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2021-01-10 22:25:04,882 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2021-01-10 22:25:04,910 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2021-01-10 22:25:05,298 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2021-01-10 22:25:05,299 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2021-01-10 22:25:05,299 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2021-01-10 22:25:05,300 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2021-01-10 22:25:05,301 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2021-01-10 22:25:05,301 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2021-01-10 22:25:05,303 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2021-01-10 22:25:05,940 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2021-01-10 22:25:05,945 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2021-01-10 22:25:05,950 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-01-10 22:25:05,958 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1610313905956 with initial instances count: 1
2021-01-10 22:25:05,962 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SELLER with eureka with status UP
2021-01-10 22:25:05,963 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1610313905963, current=UP, previous=STARTING]
2021-01-10 22:25:05,966 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084: registering service...
2021-01-10 22:25:05,967 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:25:06,032 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084 - registration status: 204
2021-01-10 22:25:06,220 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8084 (https) with context path ''
2021-01-10 22:25:06,222 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8084
2021-01-10 22:25:06,620 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-01-10 22:25:07,292 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2021-01-10 22:25:07,312 INFO org.springframework.boot.StartupInfoLogger [main] Started SellerApplication in 16.901 seconds (JVM running for 18.667)
2021-01-10 22:26:39,011 INFO org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8084-exec-6] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-10 22:26:39,011 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-6] Initializing Servlet 'dispatcherServlet'
2021-01-10 22:26:39,024 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-6] Completed initialization in 13 ms
2021-01-10 22:26:39,142 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-6] INFO - /signin
2021-01-10 22:26:39,482 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 22:26:39,522 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 22:26:39,567 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 22:26:40,227 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-6] Logged in to the system.
2021-01-10 22:27:01,595 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:27:51,441 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:30:05,308 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 22:32:54,647 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-01-10 22:33:04,293 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-01-10 22:33:07,481 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-01-10 22:33:08,277 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 777ms. Found 3 JPA repository interfaces.
2021-01-10 22:33:08,700 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-01-10 22:33:09,228 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=1fcd5db8-b656-3780-b378-6702082dec77
2021-01-10 22:33:11,413 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8084 (https)
2021-01-10 22:33:11,487 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:33:11,489 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-01-10 22:33:11,490 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-01-10 22:33:12,441 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-01-10 22:33:12,456 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 8098 ms
2021-01-10 22:33:12,720 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:33:12,721 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:33:12,752 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2430cf17
2021-01-10 22:33:13,070 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-10 22:33:14,618 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-01-10 22:33:14,924 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-01-10 22:33:15,312 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-01-10 22:33:15,621 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-10 22:33:16,172 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-01-10 22:33:17,380 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-01-10 22:33:17,407 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-01-10 22:33:21,297 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-10 22:33:21,312 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-10 22:33:22,644 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-01-10 22:33:22,680 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ef7f414, org.springframework.security.web.context.SecurityContextPersistenceFilter@5dd6f517, org.springframework.security.web.header.HeaderWriterFilter@696105c4, org.springframework.web.filter.CorsFilter@182dcd2b, org.springframework.security.web.authentication.logout.LogoutFilter@433b546f, com.ws.sep.seller.security.JwtAuthenticationFilter@5f5923ef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59a3eaf7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@56dde9f7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c3d72fd, org.springframework.security.web.session.SessionManagementFilter@2dcd451f, org.springframework.security.web.access.ExceptionTranslationFilter@6bf28f61, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@73c09a98]
2021-01-10 22:33:24,032 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2021-01-10 22:33:24,032 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2021-01-10 22:33:24,518 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2021-01-10 22:33:24,519 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2021-01-10 22:33:26,473 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:33:26,475 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:33:29,339 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-01-10 22:33:29,919 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2021-01-10 22:33:29,950 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2021-01-10 22:33:30,036 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2021-01-10 22:33:30,708 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2021-01-10 22:33:30,708 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2021-01-10 22:33:30,709 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2021-01-10 22:33:30,710 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2021-01-10 22:33:30,711 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2021-01-10 22:33:30,712 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2021-01-10 22:33:30,713 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2021-01-10 22:33:31,239 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2021-01-10 22:33:31,245 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2021-01-10 22:33:31,250 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-01-10 22:33:31,261 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1610314411259 with initial instances count: 2
2021-01-10 22:33:31,267 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SELLER with eureka with status UP
2021-01-10 22:33:31,269 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1610314411269, current=UP, previous=STARTING]
2021-01-10 22:33:31,285 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:33:31,284 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084: registering service...
2021-01-10 22:33:31,346 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084 - registration status: 204
2021-01-10 22:33:31,604 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8084 (https) with context path ''
2021-01-10 22:33:31,606 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8084
2021-01-10 22:33:31,938 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-01-10 22:33:32,587 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2021-01-10 22:33:32,610 INFO org.springframework.boot.StartupInfoLogger [main] Started SellerApplication in 46.808 seconds (JVM running for 52.847)
2021-01-10 22:34:01,858 INFO org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8084-exec-4] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-10 22:34:01,858 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-4] Initializing Servlet 'dispatcherServlet'
2021-01-10 22:34:01,867 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-4] Completed initialization in 9 ms
2021-01-10 22:34:02,264 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:34:44,183 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:36:03,061 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-01-10 22:36:04,667 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-01-10 22:36:06,497 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-01-10 22:36:06,967 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 457ms. Found 3 JPA repository interfaces.
2021-01-10 22:36:07,179 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-01-10 22:36:07,486 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=1fcd5db8-b656-3780-b378-6702082dec77
2021-01-10 22:36:08,388 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8084 (https)
2021-01-10 22:36:08,403 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:36:08,405 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-01-10 22:36:08,406 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-01-10 22:36:08,857 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-01-10 22:36:08,857 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 4147 ms
2021-01-10 22:36:09,056 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:36:09,057 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:36:09,086 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@223cbf0d
2021-01-10 22:36:09,424 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-10 22:36:09,604 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-01-10 22:36:09,668 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-01-10 22:36:09,755 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-01-10 22:36:09,982 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-10 22:36:10,308 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-01-10 22:36:11,302 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-01-10 22:36:11,332 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-01-10 22:36:12,379 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-01-10 22:36:12,410 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68229a6, org.springframework.security.web.context.SecurityContextPersistenceFilter@33373f70, org.springframework.security.web.header.HeaderWriterFilter@6669cba, org.springframework.web.filter.CorsFilter@62615be, org.springframework.security.web.authentication.logout.LogoutFilter@7535f28, com.ws.sep.seller.security.JwtAuthenticationFilter@644b68ad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44d84313, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e839aa3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@477bea57, org.springframework.security.web.session.SessionManagementFilter@61be6051, org.springframework.security.web.access.ExceptionTranslationFilter@61288814, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e26040f]
2021-01-10 22:36:12,763 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-10 22:36:12,773 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-10 22:36:13,010 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2021-01-10 22:36:13,010 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2021-01-10 22:36:13,166 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2021-01-10 22:36:13,167 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2021-01-10 22:36:13,740 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:36:13,741 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:36:14,527 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-01-10 22:36:14,685 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2021-01-10 22:36:14,698 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2021-01-10 22:36:14,730 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2021-01-10 22:36:15,004 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2021-01-10 22:36:15,004 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2021-01-10 22:36:15,005 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2021-01-10 22:36:15,005 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2021-01-10 22:36:15,005 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2021-01-10 22:36:15,006 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2021-01-10 22:36:15,006 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2021-01-10 22:36:15,281 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2021-01-10 22:36:15,283 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2021-01-10 22:36:15,287 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-01-10 22:36:15,294 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1610314575292 with initial instances count: 0
2021-01-10 22:36:15,299 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SELLER with eureka with status UP
2021-01-10 22:36:15,300 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1610314575300, current=UP, previous=STARTING]
2021-01-10 22:36:15,303 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084: registering service...
2021-01-10 22:36:15,304 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:36:15,377 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084 - registration status: 204
2021-01-10 22:36:15,516 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8084 (https) with context path ''
2021-01-10 22:36:15,517 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8084
2021-01-10 22:36:15,869 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-01-10 22:36:16,339 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2021-01-10 22:36:16,361 INFO org.springframework.boot.StartupInfoLogger [main] Started SellerApplication in 14.377 seconds (JVM running for 18.706)
2021-01-10 22:36:45,284 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Disable delta property : false
2021-01-10 22:36:45,285 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Single vip registry refresh property : null
2021-01-10 22:36:45,286 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Force full registry fetch : false
2021-01-10 22:36:45,286 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Application is null : false
2021-01-10 22:36:45,286 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Registered Applications size is zero : true
2021-01-10 22:36:45,286 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Application version is -1: false
2021-01-10 22:36:45,287 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Getting all instance registry info from the eureka server
2021-01-10 22:36:45,401 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] The response status is 200
2021-01-10 22:38:06,350 INFO org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8084-exec-6] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-10 22:38:06,350 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-6] Initializing Servlet 'dispatcherServlet'
2021-01-10 22:38:06,361 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-6] Completed initialization in 11 ms
2021-01-10 22:38:06,799 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:39:23,014 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:39:46,321 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:41:15,010 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 22:44:12,908 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-01-10 22:44:15,751 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-01-10 22:44:19,511 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-01-10 22:44:20,063 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 536ms. Found 3 JPA repository interfaces.
2021-01-10 22:44:20,530 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-01-10 22:44:21,235 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=1fcd5db8-b656-3780-b378-6702082dec77
2021-01-10 22:44:24,756 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8084 (https)
2021-01-10 22:44:24,776 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:44:24,777 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-01-10 22:44:24,778 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-01-10 22:44:26,264 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-01-10 22:44:26,265 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 10392 ms
2021-01-10 22:44:26,451 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:44:26,452 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:44:26,483 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6e49b011
2021-01-10 22:44:26,983 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-10 22:44:27,223 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-01-10 22:44:27,836 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-01-10 22:44:27,987 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-01-10 22:44:28,279 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-10 22:44:28,888 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-01-10 22:44:29,881 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-01-10 22:44:29,909 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-01-10 22:44:31,609 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table roles (id bigint not null auto_increment, name varchar(60), primary key (id)) engine=InnoDB
2021-01-10 22:44:32,600 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table seller (id bigint not null auto_increment, created_at datetime not null, email varchar(255), password varchar(255), pib bigint, primary key (id)) engine=InnoDB
2021-01-10 22:44:33,051 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table seller_roles (seller_id bigint not null, role_id bigint not null, primary key (seller_id, role_id)) engine=InnoDB
2021-01-10 22:44:35,942 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-01-10 22:44:36,050 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5847010, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d77be8e, org.springframework.security.web.header.HeaderWriterFilter@eb695e8, org.springframework.web.filter.CorsFilter@1ad9d5be, org.springframework.security.web.authentication.logout.LogoutFilter@6e66b498, com.ws.sep.seller.security.JwtAuthenticationFilter@96be1ae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ab1d93d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78d61f17, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46fdfaeb, org.springframework.security.web.session.SessionManagementFilter@1eda309d, org.springframework.security.web.access.ExceptionTranslationFilter@1b841e7d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3023f157]
2021-01-10 22:44:36,393 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table seller_types (seller_id bigint not null, type_id bigint not null, primary key (seller_id, type_id)) engine=InnoDB
2021-01-10 22:44:37,173 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2021-01-10 22:44:37,174 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2021-01-10 22:44:37,393 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table types (id bigint not null auto_increment, type varchar(60), primary key (id)) engine=InnoDB
2021-01-10 22:44:37,753 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2021-01-10 22:44:37,760 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2021-01-10 22:44:39,500 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table roles drop index UK_nb4h0p6txrmfc0xbrd1kglp9t
2021-01-10 22:44:39,607 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table roles add constraint UK_nb4h0p6txrmfc0xbrd1kglp9t unique (name)
2021-01-10 22:44:40,073 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:44:40,074 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:44:40,364 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller drop index UKcrgbovyy4gvgsum2yyb3fbfn7
2021-01-10 22:44:40,368 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller add constraint UKcrgbovyy4gvgsum2yyb3fbfn7 unique (email)
2021-01-10 22:44:41,177 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller drop index UKnsf0yh5x4kb6cwjh7s82rexy8
2021-01-10 22:44:41,180 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller add constraint UKnsf0yh5x4kb6cwjh7s82rexy8 unique (pib)
2021-01-10 22:44:41,402 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-01-10 22:44:41,647 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table types drop index UK4tchu0t1cxvps06xylvdhu0ik
2021-01-10 22:44:41,651 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table types add constraint UK4tchu0t1cxvps06xylvdhu0ik unique (type)
2021-01-10 22:44:42,235 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_roles add constraint FKd9udck8wcatkui48557l7k7hg foreign key (role_id) references roles (id)
2021-01-10 22:44:44,444 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_roles add constraint FKa25f332e8t8wbwqsgqdm1qnt5 foreign key (seller_id) references seller (id)
2021-01-10 22:44:50,087 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_types add constraint FKfhquhyw59vs5ka1uodbmrrb8n foreign key (type_id) references types (id)
2021-01-10 22:44:52,269 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_types add constraint FKg46ee9gweuq1jsibld9qu00fl foreign key (seller_id) references seller (id)
2021-01-10 22:44:54,027 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-10 22:44:54,050 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-10 22:44:54,079 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2021-01-10 22:44:54,091 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2021-01-10 22:44:54,119 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2021-01-10 22:44:54,376 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2021-01-10 22:44:54,376 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2021-01-10 22:44:54,376 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2021-01-10 22:44:54,377 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2021-01-10 22:44:54,377 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2021-01-10 22:44:54,377 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2021-01-10 22:44:54,377 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2021-01-10 22:44:54,659 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2021-01-10 22:44:54,661 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2021-01-10 22:44:54,666 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-01-10 22:44:54,672 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1610315094670 with initial instances count: 0
2021-01-10 22:44:54,675 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SELLER with eureka with status UP
2021-01-10 22:44:54,676 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1610315094676, current=UP, previous=STARTING]
2021-01-10 22:44:54,680 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084: registering service...
2021-01-10 22:44:54,681 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:44:54,767 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084 - registration status: 204
2021-01-10 22:44:54,926 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8084 (https) with context path ''
2021-01-10 22:44:54,929 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8084
2021-01-10 22:44:55,254 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-01-10 22:44:55,715 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2021-01-10 22:44:55,737 INFO org.springframework.boot.StartupInfoLogger [main] Started SellerApplication in 45.605 seconds (JVM running for 48.882)
2021-01-10 22:45:24,664 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Disable delta property : false
2021-01-10 22:45:24,664 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Single vip registry refresh property : null
2021-01-10 22:45:24,664 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Force full registry fetch : false
2021-01-10 22:45:24,665 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Application is null : false
2021-01-10 22:45:24,665 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Registered Applications size is zero : true
2021-01-10 22:45:24,665 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Application version is -1: false
2021-01-10 22:45:24,665 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] Getting all instance registry info from the eureka server
2021-01-10 22:45:24,767 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-CacheRefreshExecutor-0] The response status is 200
2021-01-10 22:48:20,122 INFO org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8084-exec-6] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-10 22:48:20,123 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-6] Initializing Servlet 'dispatcherServlet'
2021-01-10 22:48:20,147 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-6] Completed initialization in 21 ms
2021-01-10 22:48:20,322 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-6] INFO - /signin
2021-01-10 22:48:20,635 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 22:48:20,665 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 22:48:20,674 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 22:48:21,105 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-6] Logged in to the system.
2021-01-10 22:48:36,040 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:48:37,961 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:48:37,987 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:48:38,010 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:48:38,020 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select paymenttyp0_.id as id1_4_, paymenttyp0_.type as type2_4_ from types paymenttyp0_ where paymenttyp0_.type=?
2021-01-10 22:48:38,078 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] insert into types (type) values (?)
2021-01-10 22:48:38,118 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] insert into seller_types (seller_id, type_id) values (?, ?)
2021-01-10 22:48:38,188 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-5] Successful seller update.
2021-01-10 22:48:52,881 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:49:54,382 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 22:51:27,489 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:51:33,361 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-7] INFO - /signin
2021-01-10 22:51:33,363 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 22:51:33,392 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 22:51:33,395 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 22:51:33,489 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-7] Logged in to the system.
2021-01-10 22:52:10,846 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:52:11,197 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:52:11,224 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:52:11,234 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:52:11,238 ERROR com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-1] Failed to seller update.
2021-01-10 22:53:20,131 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2021-01-10 22:53:22,914 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-01-10 22:53:27,017 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2021-01-10 22:53:27,688 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 656ms. Found 3 JPA repository interfaces.
2021-01-10 22:53:28,094 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2021-01-10 22:53:28,807 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=1fcd5db8-b656-3780-b378-6702082dec77
2021-01-10 22:53:31,326 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8084 (https)
2021-01-10 22:53:31,352 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:53:31,355 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2021-01-10 22:53:31,355 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2021-01-10 22:53:33,273 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-01-10 22:53:33,273 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 10256 ms
2021-01-10 22:53:33,447 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:53:33,448 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:53:33,476 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@44485db
2021-01-10 22:53:33,831 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2021-01-10 22:53:34,074 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2021-01-10 22:53:34,243 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2021-01-10 22:53:34,418 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2021-01-10 22:53:34,815 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-01-10 22:53:36,003 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2021-01-10 22:53:37,577 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2021-01-10 22:53:37,622 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2021-01-10 22:53:39,952 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2021-01-10 22:53:39,991 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6244afc4, org.springframework.security.web.context.SecurityContextPersistenceFilter@5296f00c, org.springframework.security.web.header.HeaderWriterFilter@3211cc84, org.springframework.web.filter.CorsFilter@534d0cfa, org.springframework.security.web.authentication.logout.LogoutFilter@3a8ead9, com.ws.sep.seller.security.JwtAuthenticationFilter@24b8a393, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5487a8f1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@155c7eae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f1ffc18, org.springframework.security.web.session.SessionManagementFilter@f439e0f, org.springframework.security.web.access.ExceptionTranslationFilter@2573b149, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@29e3c28]
2021-01-10 22:53:40,425 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table roles (id bigint not null auto_increment, name varchar(60), primary key (id)) engine=InnoDB
2021-01-10 22:53:41,035 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table seller (id bigint not null auto_increment, created_at datetime not null, email varchar(255), password varchar(255), pib bigint, primary key (id)) engine=InnoDB
2021-01-10 22:53:41,574 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2021-01-10 22:53:41,575 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2021-01-10 22:53:42,462 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2021-01-10 22:53:42,463 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2021-01-10 22:53:43,127 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table seller_roles (seller_id bigint not null, role_id bigint not null, primary key (seller_id, role_id)) engine=InnoDB
2021-01-10 22:53:44,560 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table seller_types (seller_id bigint not null, type_id bigint not null, primary key (seller_id, type_id)) engine=InnoDB
2021-01-10 22:53:44,611 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2021-01-10 22:53:44,611 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2021-01-10 22:53:45,003 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table types (id bigint not null auto_increment, type varchar(60), primary key (id)) engine=InnoDB
2021-01-10 22:53:45,872 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table roles drop index UK_nb4h0p6txrmfc0xbrd1kglp9t
2021-01-10 22:53:45,918 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table roles add constraint UK_nb4h0p6txrmfc0xbrd1kglp9t unique (name)
2021-01-10 22:53:46,589 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2021-01-10 22:53:46,889 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller drop index UKcrgbovyy4gvgsum2yyb3fbfn7
2021-01-10 22:53:46,892 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller add constraint UKcrgbovyy4gvgsum2yyb3fbfn7 unique (email)
2021-01-10 22:53:47,713 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller drop index UKnsf0yh5x4kb6cwjh7s82rexy8
2021-01-10 22:53:47,715 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller add constraint UKnsf0yh5x4kb6cwjh7s82rexy8 unique (pib)
2021-01-10 22:53:48,014 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table types drop index UK4tchu0t1cxvps06xylvdhu0ik
2021-01-10 22:53:48,016 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table types add constraint UK4tchu0t1cxvps06xylvdhu0ik unique (type)
2021-01-10 22:53:48,707 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_roles add constraint FKd9udck8wcatkui48557l7k7hg foreign key (role_id) references roles (id)
2021-01-10 22:53:51,463 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_roles add constraint FKa25f332e8t8wbwqsgqdm1qnt5 foreign key (seller_id) references seller (id)
2021-01-10 22:53:57,049 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_types add constraint FKfhquhyw59vs5ka1uodbmrrb8n foreign key (type_id) references types (id)
2021-01-10 22:53:58,721 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_types add constraint FKg46ee9gweuq1jsibld9qu00fl foreign key (seller_id) references seller (id)
2021-01-10 22:54:00,363 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-01-10 22:54:00,374 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2021-01-10 22:54:00,403 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2021-01-10 22:54:00,417 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2021-01-10 22:54:00,444 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2021-01-10 22:54:00,655 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2021-01-10 22:54:00,656 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2021-01-10 22:54:00,656 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2021-01-10 22:54:00,656 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2021-01-10 22:54:00,657 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2021-01-10 22:54:00,657 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2021-01-10 22:54:00,657 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2021-01-10 22:54:00,986 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2021-01-10 22:54:00,991 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2021-01-10 22:54:00,996 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2021-01-10 22:54:01,001 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1610315641000 with initial instances count: 2
2021-01-10 22:54:01,004 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SELLER with eureka with status UP
2021-01-10 22:54:01,005 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1610315641005, current=UP, previous=STARTING]
2021-01-10 22:54:01,010 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084: registering service...
2021-01-10 22:54:01,010 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["https-jsse-nio-8084"]
2021-01-10 22:54:01,054 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084 - registration status: 204
2021-01-10 22:54:01,239 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8084 (https) with context path ''
2021-01-10 22:54:01,241 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8084
2021-01-10 22:54:01,564 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositoriesâ€¦
2021-01-10 22:54:02,029 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2021-01-10 22:54:02,048 INFO org.springframework.boot.StartupInfoLogger [main] Started SellerApplication in 44.161 seconds (JVM running for 46.781)
2021-01-10 22:56:11,281 INFO org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8084-exec-6] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-01-10 22:56:11,282 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-6] Initializing Servlet 'dispatcherServlet'
2021-01-10 22:56:11,298 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-6] Completed initialization in 16 ms
2021-01-10 22:56:11,445 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-6] INFO - /signin
2021-01-10 22:56:11,795 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2021-01-10 22:56:11,827 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2021-01-10 22:56:11,837 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2021-01-10 22:56:12,298 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-6] Logged in to the system.
2021-01-10 22:56:14,185 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:56:16,298 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:56:16,321 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:56:16,342 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:56:16,351 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select paymenttyp0_.id as id1_4_, paymenttyp0_.type as type2_4_ from types paymenttyp0_ where paymenttyp0_.type=?
2021-01-10 22:56:16,426 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] insert into types (type) values (?)
2021-01-10 22:56:16,459 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] insert into seller_types (seller_id, type_id) values (?, ?)
2021-01-10 22:56:16,524 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-5] Successful seller update.
2021-01-10 22:56:24,275 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2021-01-10 22:59:00,661 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 23:04:00,663 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2021-01-10 23:09:00,666 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
