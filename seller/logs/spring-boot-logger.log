2020-12-22 00:01:35,149 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:02:21,073 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:02:21,122 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:02:21,125 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-2] Payment controller - getSellerPayments.
2020-12-22 00:02:21,126 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:02:21,128 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-2] Successfully returned type of payment.
2020-12-22 00:02:26,026 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:02:26,051 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:02:26,055 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-1] Payment controller - getSellerPayments.
2020-12-22 00:02:26,056 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:02:26,059 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-1] Successfully returned type of payment.
2020-12-22 00:03:12,201 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:03:12,214 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:03:12,216 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-5] Payment controller - getSellerPayments.
2020-12-22 00:03:12,218 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:03:12,220 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-5] Successfully returned type of payment.
2020-12-22 00:06:35,156 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:09:38,288 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:09:38,332 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:09:38,335 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-8] Payment controller - getSellerPayments.
2020-12-22 00:09:38,336 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:09:38,338 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-8] Successfully returned type of payment.
2020-12-22 00:09:52,405 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:11:35,163 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:16:32,005 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:16:32,055 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:16:32,058 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-9] Payment controller - getSellerPayments.
2020-12-22 00:16:32,060 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:16:32,064 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-9] Successfully returned type of payment.
2020-12-22 00:16:35,169 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:16:48,887 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:16:48,903 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:16:48,905 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-3] Payment controller - getSellerPayments.
2020-12-22 00:16:48,906 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:16:48,909 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-3] Successfully returned type of payment.
2020-12-22 00:16:56,586 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:16:56,599 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:16:56,602 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-4] Payment controller - getSellerPayments.
2020-12-22 00:16:56,603 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:16:56,606 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-4] Successfully returned type of payment.
2020-12-22 00:17:52,946 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:17:52,967 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:17:52,972 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-6] Payment controller - getSellerPayments.
2020-12-22 00:17:52,974 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:17:52,977 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-6] Successfully returned type of payment.
2020-12-22 00:18:04,928 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:18:04,949 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:18:04,953 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-7] Payment controller - getSellerPayments.
2020-12-22 00:18:04,956 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:18:04,959 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-7] Successfully returned type of payment.
2020-12-22 00:18:10,819 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:18:10,839 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:18:10,843 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-9] Payment controller - getSellerPayments.
2020-12-22 00:18:10,845 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:18:10,848 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-9] Successfully returned type of payment.
2020-12-22 00:18:24,471 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:18:24,498 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:18:24,502 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-3] Payment controller - getSellerPayments.
2020-12-22 00:18:24,504 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:18:24,506 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-3] Successfully returned type of payment.
2020-12-22 00:21:35,174 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:21:35,485 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:21:35,528 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:21:35,531 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-4] Payment controller - getSellerPayments.
2020-12-22 00:21:35,533 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:21:35,535 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-4] Successfully returned type of payment.
2020-12-22 00:21:44,598 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:22:39,217 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:22:39,265 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:22:39,268 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-1] Payment controller - getSellerPayments.
2020-12-22 00:22:39,269 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:22:39,273 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-1] Successfully returned type of payment.
2020-12-22 00:22:48,830 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:23:27,385 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:23:27,411 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:23:27,414 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-6] Payment controller - getSellerPayments.
2020-12-22 00:23:27,415 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:23:27,418 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-6] Successfully returned type of payment.
2020-12-22 00:23:33,717 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 00:26:35,177 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:31:35,188 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:36:35,193 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:41:35,208 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:46:35,213 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:51:35,226 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 00:56:35,228 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 01:01:35,239 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 01:06:35,245 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 01:10:55,493 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-10] INFO - /signin
2020-12-22 01:10:55,495 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2020-12-22 01:10:55,499 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2020-12-22 01:10:55,504 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2020-12-22 01:10:55,626 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-10] Logged in to the system.
2020-12-22 01:10:56,724 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:10:56,738 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:10:56,742 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-2] Payment controller - getSellerPayments.
2020-12-22 01:10:56,745 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:10:56,747 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-2] Successfully returned type of payment.
2020-12-22 01:11:03,816 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:11:35,247 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 01:16:35,256 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 01:18:04,147 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:18:04,190 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:18:04,193 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-5] Payment controller - getSellerPayments.
2020-12-22 01:18:04,194 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:18:04,196 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-5] Successfully returned type of payment.
2020-12-22 01:19:15,834 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:19:15,890 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:19:15,895 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-6] Payment controller - getSellerPayments.
2020-12-22 01:19:15,897 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:19:15,900 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-6] Successfully returned type of payment.
2020-12-22 01:19:56,591 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:19:56,608 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:19:56,610 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-10] Payment controller - getSellerPayments.
2020-12-22 01:19:56,612 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:19:56,614 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-10] Successfully returned type of payment.
2020-12-22 01:20:30,366 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:20:30,379 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:20:30,381 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-2] Payment controller - getSellerPayments.
2020-12-22 01:20:30,382 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:20:30,384 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-2] Successfully returned type of payment.
2020-12-22 01:20:59,054 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:21:35,269 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 01:22:11,068 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:22:11,106 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:22:11,108 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-4] Payment controller - getSellerPayments.
2020-12-22 01:22:11,109 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:22:11,111 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-4] Successfully returned type of payment.
2020-12-22 01:23:34,202 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-2] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:23:34,249 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:23:34,253 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-8] Payment controller - getSellerPayments.
2020-12-22 01:23:34,254 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-8] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:23:34,256 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-8] Successfully returned type of payment.
2020-12-22 01:26:35,282 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 01:27:50,125 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:27:50,163 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:27:50,165 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-10] Payment controller - getSellerPayments.
2020-12-22 01:27:50,166 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-10] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:27:50,168 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-10] Successfully returned type of payment.
2020-12-22 01:27:58,686 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-9] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:28:22,564 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:28:22,577 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:28:22,580 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-1] Payment controller - getSellerPayments.
2020-12-22 01:28:22,581 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-1] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:28:22,583 INFO com.ws.sep.seller.services.PaymentService [https-jsse-nio-8084-exec-1] Successfully returned type of payment.
2020-12-22 01:29:21,357 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 01:31:35,287 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [AsyncResolver-bootstrap-executor-0] Resolving eureka endpoints via configuration
2020-12-22 16:10:40,652 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2020-12-22 16:10:50,964 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-22 16:10:56,061 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-22 16:10:56,778 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 678ms. Found 3 JPA repository interfaces.
2020-12-22 16:10:58,040 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-12-22 16:10:58,786 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=1fcd5db8-b656-3780-b378-6702082dec77
2020-12-22 16:11:00,397 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8084 (https)
2020-12-22 16:11:00,422 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["https-jsse-nio-8084"]
2020-12-22 16:11:00,430 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-12-22 16:11:00,431 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-22 16:11:01,264 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-12-22 16:11:01,265 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 10195 ms
2020-12-22 16:11:01,513 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-12-22 16:11:01,514 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-12-22 16:11:01,551 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@f49e81a
2020-12-22 16:11:02,842 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-22 16:11:03,081 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-22 16:11:03,178 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-22 16:11:03,273 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2020-12-22 16:11:03,775 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2020-12-22 16:11:04,128 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-22 16:11:06,104 ERROR com.zaxxer.hikari.pool.HikariPool [task-1] HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-22 16:11:06,114 WARN org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [task-1] HHH000342: Could not obtain connection to query metadata
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-22 16:11:06,168 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2020-12-22 16:11:08,617 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-22 16:11:08,689 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e26040f, org.springframework.security.web.context.SecurityContextPersistenceFilter@72b1df49, org.springframework.security.web.header.HeaderWriterFilter@6cb662e8, org.springframework.web.filter.CorsFilter@1782896, org.springframework.security.web.authentication.logout.LogoutFilter@4acc27fd, com.ws.sep.seller.security.JwtAuthenticationFilter@58b3eb1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d05435c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@33373f70, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@8bde368, org.springframework.security.web.session.SessionManagementFilter@128a188a, org.springframework.security.web.access.ExceptionTranslationFilter@11c25846, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ed84be9]
2020-12-22 16:11:08,749 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-22 16:11:09,756 ERROR com.zaxxer.hikari.pool.HikariPool [task-1] HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:333)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
2020-12-22 16:11:09,758 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [task-1] SQL Error: 1045, SQLState: 28000
2020-12-22 16:11:09,759 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [task-1] Access denied for user 'root'@'localhost' (using password: YES)
2020-12-22 16:11:09,849 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-12-22 16:11:09,850 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-12-22 16:11:10,115 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-12-22 16:11:10,116 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-12-22 16:11:11,391 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-12-22 16:11:11,391 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-12-22 16:11:13,461 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-12-22 16:11:13,878 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-12-22 16:11:13,899 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-12-22 16:11:13,972 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-12-22 16:11:14,419 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-12-22 16:11:14,419 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-12-22 16:11:14,419 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-12-22 16:11:14,420 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-12-22 16:11:14,420 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-12-22 16:11:14,421 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-12-22 16:11:14,422 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-12-22 16:11:14,821 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-12-22 16:11:14,825 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-12-22 16:11:14,832 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-12-22 16:11:14,846 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1608649874841 with initial instances count: 0
2020-12-22 16:11:14,855 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SELLER with eureka with status UP
2020-12-22 16:11:14,856 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1608649874856, current=UP, previous=STARTING]
2020-12-22 16:11:14,860 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084: registering service...
2020-12-22 16:11:14,864 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["https-jsse-nio-8084"]
2020-12-22 16:11:15,092 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084 - registration status: 204
2020-12-22 16:11:15,417 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8084 (https) with context path ''
2020-12-22 16:11:15,420 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8084
2020-12-22 16:11:16,089 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-12-22 16:11:16,240 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ISellerRepository' defined in com.ws.sep.seller.repositories.ISellerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaMappingContext' while setting bean property 'mappingContext'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2020-12-22 16:11:16,248 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Closing JPA EntityManagerFactory for persistence unit 'default'
2020-12-22 16:11:16,249 WARN org.springframework.beans.factory.support.DisposableBeanAdapter [main] Invocation of destroy method failed on bean with name 'entityManagerFactory': javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
2020-12-22 16:11:16,250 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Shutting down ExecutorService 'applicationTaskExecutor'
2020-12-22 16:11:16,252 INFO com.netflix.discovery.DiscoveryClient [main] Shutting down DiscoveryClient ...
2020-12-22 16:11:19,261 INFO com.netflix.discovery.DiscoveryClient [main] Unregistering ...
2020-12-22 16:11:19,270 INFO com.netflix.discovery.DiscoveryClient [main] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084 - deregister  status: 200
2020-12-22 16:11:19,297 INFO com.netflix.discovery.DiscoveryClient [main] Completed shut down of DiscoveryClient
2020-12-22 16:11:19,300 INFO org.apache.juli.logging.DirectJDKLog [main] Pausing ProtocolHandler ["https-jsse-nio-8084"]
2020-12-22 16:11:19,600 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2020-12-22 16:11:19,605 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping ProtocolHandler ["https-jsse-nio-8084"]
2020-12-22 16:11:19,652 INFO org.apache.juli.logging.DirectJDKLog [main] Destroying ProtocolHandler ["https-jsse-nio-8084"]
2020-12-22 16:11:19,670 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener [main] 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-12-22 16:11:19,673 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ISellerRepository' defined in com.ws.sep.seller.repositories.ISellerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaMappingContext' while setting bean property 'mappingContext'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:342)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1697)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1442)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:624)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:612)
	at org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent(DeferredRepositoryInitializationListener.java:51)
	at org.springframework.data.repository.config.DeferredRepositoryInitializationListener.onApplicationEvent(DeferredRepositoryInitializationListener.java:36)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:404)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:361)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:898)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:554)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.ws.sep.seller.SellerApplication.main(SellerApplication.java:38)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1794)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:594)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330)
	... 28 common frames omitted
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:403)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.hibernate.exception.GenericJDBCException: Unable to open JDBC Connection for DDL execution
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:69)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:60)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:67)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.getTables(InformationExtractorJdbcDatabaseMetaDataImpl.java:333)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:120)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:65)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:207)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	... 4 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:358)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:206)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:477)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:560)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:43)
	... 19 common frames omitted
2020-12-22 16:22:25,912 INFO org.hibernate.validator.internal.util.Version [background-preinit] HV000001: Hibernate Validator 6.1.6.Final
2020-12-22 16:22:29,123 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to default profiles: default
2020-12-22 16:22:32,271 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-12-22 16:22:33,633 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 1133ms. Found 3 JPA repository interfaces.
2020-12-22 16:22:34,537 WARN org.springframework.boot.actuate.endpoint.EndpointId [main] Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
2020-12-22 16:22:36,616 INFO org.springframework.cloud.context.scope.GenericScope [main] BeanFactory id=1fcd5db8-b656-3780-b378-6702082dec77
2020-12-22 16:22:39,942 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat initialized with port(s): 8084 (https)
2020-12-22 16:22:39,991 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["https-jsse-nio-8084"]
2020-12-22 16:22:39,993 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2020-12-22 16:22:39,993 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-12-22 16:22:41,670 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2020-12-22 16:22:41,671 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 12473 ms
2020-12-22 16:22:41,959 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-12-22 16:22:41,959 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-12-22 16:22:41,989 INFO com.netflix.config.DynamicPropertyFactory [main] DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4f20b022
2020-12-22 16:22:42,549 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-12-22 16:22:43,201 INFO org.springframework.scheduling.concurrent.ExecutorConfigurationSupport [main] Initializing ExecutorService 'applicationTaskExecutor'
2020-12-22 16:22:43,583 INFO org.hibernate.jpa.internal.util.LogHelper [task-1] HHH000204: Processing PersistenceUnitInfo [name: default]
2020-12-22 16:22:43,695 INFO org.hibernate.Version [task-1] HHH000412: Hibernate ORM core version 5.4.23.Final
2020-12-22 16:22:43,989 INFO org.hibernate.annotations.common.reflection.java.JavaReflectionManager [task-1] HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2020-12-22 16:22:44,787 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Starting...
2020-12-22 16:22:45,820 INFO com.zaxxer.hikari.HikariDataSource [task-1] HikariPool-1 - Start completed.
2020-12-22 16:22:46,017 INFO org.hibernate.dialect.Dialect [task-1] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
2020-12-22 16:22:47,683 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table roles (id bigint not null auto_increment, name varchar(60), primary key (id)) engine=InnoDB
2020-12-22 16:22:49,051 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table seller (id bigint not null auto_increment, created_at datetime not null, email varchar(255), password varchar(255), pib bigint, primary key (id)) engine=InnoDB
2020-12-22 16:22:49,968 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table seller_roles (seller_id bigint not null, role_id bigint not null, primary key (seller_id, role_id)) engine=InnoDB
2020-12-22 16:22:50,489 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table seller_types (seller_id bigint not null, type_id bigint not null, primary key (seller_id, type_id)) engine=InnoDB
2020-12-22 16:22:51,122 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] create table types (id bigint not null auto_increment, type varchar(60), primary key (id)) engine=InnoDB
2020-12-22 16:22:51,798 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [main] Exposing 2 endpoint(s) beneath base path '/actuator'
2020-12-22 16:22:51,923 INFO org.springframework.security.web.DefaultSecurityFilterChain [main] Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36fe83d, org.springframework.security.web.context.SecurityContextPersistenceFilter@740ad32e, org.springframework.security.web.header.HeaderWriterFilter@37e64e37, org.springframework.web.filter.CorsFilter@310f8a05, org.springframework.security.web.authentication.logout.LogoutFilter@3340ce58, com.ws.sep.seller.security.JwtAuthenticationFilter@2e0163cb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71d0b8a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19f1be04, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f98ac31, org.springframework.security.web.session.SessionManagementFilter@24955144, org.springframework.security.web.access.ExceptionTranslationFilter@5bdb9c69, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6493f780]
2020-12-22 16:22:52,156 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table roles drop index UK_nb4h0p6txrmfc0xbrd1kglp9t
2020-12-22 16:22:52,327 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table roles add constraint UK_nb4h0p6txrmfc0xbrd1kglp9t unique (name)
2020-12-22 16:22:53,341 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON encoding codec LegacyJacksonJson
2020-12-22 16:22:53,363 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using JSON decoding codec LegacyJacksonJson
2020-12-22 16:22:53,713 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller drop index UKcrgbovyy4gvgsum2yyb3fbfn7
2020-12-22 16:22:53,718 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller add constraint UKcrgbovyy4gvgsum2yyb3fbfn7 unique (email)
2020-12-22 16:22:54,161 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML encoding codec XStreamXml
2020-12-22 16:22:54,162 INFO com.netflix.discovery.provider.DiscoveryJerseyProvider [main] Using XML decoding codec XStreamXml
2020-12-22 16:22:55,585 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller drop index UKnsf0yh5x4kb6cwjh7s82rexy8
2020-12-22 16:22:55,589 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller add constraint UKnsf0yh5x4kb6cwjh7s82rexy8 unique (pib)
2020-12-22 16:22:55,995 WARN com.netflix.config.sources.URLConfigurationSource [main] No URLs will be polled as dynamic configuration sources.
2020-12-22 16:22:55,995 INFO com.netflix.config.sources.URLConfigurationSource [main] To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-12-22 16:22:56,164 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table types drop index UK4tchu0t1cxvps06xylvdhu0ik
2020-12-22 16:22:56,168 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table types add constraint UK4tchu0t1cxvps06xylvdhu0ik unique (type)
2020-12-22 16:22:56,708 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_roles add constraint FKd9udck8wcatkui48557l7k7hg foreign key (role_id) references roles (id)
2020-12-22 16:23:01,518 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_roles add constraint FKa25f332e8t8wbwqsgqdm1qnt5 foreign key (seller_id) references seller (id)
2020-12-22 16:23:03,567 WARN org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger [main] You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-12-22 16:23:09,590 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_types add constraint FKfhquhyw59vs5ka1uodbmrrb8n foreign key (type_id) references types (id)
2020-12-22 16:23:13,282 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [task-1] alter table seller_types add constraint FKg46ee9gweuq1jsibld9qu00fl foreign key (seller_id) references seller (id)
2020-12-22 16:23:16,733 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [task-1] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-12-22 16:23:16,746 INFO org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [task-1] Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-12-22 16:23:16,781 INFO org.springframework.cloud.netflix.eureka.InstanceInfoFactory [main] Setting initial instance status as: STARTING
2020-12-22 16:23:16,799 INFO com.netflix.discovery.DiscoveryClient [main] Initializing Eureka in region us-east-1
2020-12-22 16:23:16,836 INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver [main] Resolving eureka endpoints via configuration
2020-12-22 16:23:17,139 INFO com.netflix.discovery.DiscoveryClient [main] Disable delta property : false
2020-12-22 16:23:17,139 INFO com.netflix.discovery.DiscoveryClient [main] Single vip registry refresh property : null
2020-12-22 16:23:17,154 INFO com.netflix.discovery.DiscoveryClient [main] Force full registry fetch : false
2020-12-22 16:23:17,157 INFO com.netflix.discovery.DiscoveryClient [main] Application is null : false
2020-12-22 16:23:17,160 INFO com.netflix.discovery.DiscoveryClient [main] Registered Applications size is zero : true
2020-12-22 16:23:17,163 INFO com.netflix.discovery.DiscoveryClient [main] Application version is -1: true
2020-12-22 16:23:17,164 INFO com.netflix.discovery.DiscoveryClient [main] Getting all instance registry info from the eureka server
2020-12-22 16:23:17,572 INFO com.netflix.discovery.DiscoveryClient [main] The response status is 200
2020-12-22 16:23:17,576 INFO com.netflix.discovery.DiscoveryClient [main] Starting heartbeat executor: renew interval is: 30
2020-12-22 16:23:17,581 INFO com.netflix.discovery.InstanceInfoReplicator [main] InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-12-22 16:23:17,587 INFO com.netflix.discovery.DiscoveryClient [main] Discovery Client initialized at timestamp 1608650597585 with initial instances count: 1
2020-12-22 16:23:17,590 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry [main] Registering application SELLER with eureka with status UP
2020-12-22 16:23:17,591 INFO com.netflix.discovery.DiscoveryClient$3 [main] Saw local status change event StatusChangeEvent [timestamp=1608650597591, current=UP, previous=STARTING]
2020-12-22 16:23:17,595 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084: registering service...
2020-12-22 16:23:17,595 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["https-jsse-nio-8084"]
2020-12-22 16:23:17,641 INFO com.netflix.discovery.DiscoveryClient [DiscoveryClient-InstanceInfoReplicator-0] DiscoveryClient_SELLER/DESKTOP-UVNRQ0Q:seller:8084 - registration status: 204
2020-12-22 16:23:17,831 INFO org.springframework.boot.web.embedded.tomcat.TomcatWebServer [main] Tomcat started on port(s): 8084 (https) with context path ''
2020-12-22 16:23:17,832 INFO org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration [main] Updating port to 8084
2020-12-22 16:23:18,230 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Triggering deferred initialization of Spring Data repositories…
2020-12-22 16:23:18,747 INFO org.springframework.data.repository.config.DeferredRepositoryInitializationListener [main] Spring Data repositories initialized!
2020-12-22 16:23:18,767 INFO org.springframework.boot.StartupInfoLogger [main] Started SellerApplication in 63.657 seconds (JVM running for 71.552)
2020-12-22 16:24:46,452 INFO org.apache.juli.logging.DirectJDKLog [https-jsse-nio-8084-exec-5] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-12-22 16:24:46,452 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-5] Initializing Servlet 'dispatcherServlet'
2020-12-22 16:24:46,465 INFO org.springframework.web.servlet.FrameworkServlet [https-jsse-nio-8084-exec-5] Completed initialization in 13 ms
2020-12-22 16:24:46,577 INFO com.ws.sep.seller.controllers.AuthController [https-jsse-nio-8084-exec-5] INFO - /signin
2020-12-22 16:24:46,897 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_, seller0_.created_at as created_2_1_, seller0_.email as email3_1_, seller0_.password as password4_1_, seller0_.pib as pib5_1_ from seller seller0_ where seller0_.email=?
2020-12-22 16:24:46,977 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select types0_.seller_id as seller_i1_3_0_, types0_.type_id as type_id2_3_0_, paymenttyp1_.id as id1_4_1_, paymenttyp1_.type as type2_4_1_ from seller_types types0_ inner join types paymenttyp1_ on types0_.type_id=paymenttyp1_.id where types0_.seller_id=?
2020-12-22 16:24:47,030 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select roles0_.seller_id as seller_i1_2_0_, roles0_.role_id as role_id2_2_0_, role1_.id as id1_0_1_, role1_.name as name2_0_1_ from seller_roles roles0_ inner join roles role1_ on roles0_.role_id=role1_.id where roles0_.seller_id=?
2020-12-22 16:24:47,619 INFO com.ws.sep.seller.services.AuthService [https-jsse-nio-8084-exec-5] Logged in to the system.
2020-12-22 16:26:11,723 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-3] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 16:26:17,376 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-6] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 16:26:21,246 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-5] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 16:26:22,372 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-7] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 16:26:22,422 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 16:26:22,445 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select seller0_.id as id1_1_0_, seller0_.created_at as created_2_1_0_, seller0_.email as email3_1_0_, seller0_.password as password4_1_0_, seller0_.pib as pib5_1_0_, roles1_.seller_id as seller_i1_2_1_, role2_.id as role_id2_2_1_, role2_.id as id1_0_2_, role2_.name as name2_0_2_, types3_.seller_id as seller_i1_3_3_, paymenttyp4_.id as type_id2_3_3_, paymenttyp4_.id as id1_4_4_, paymenttyp4_.type as type2_4_4_ from seller seller0_ left outer join seller_roles roles1_ on seller0_.id=roles1_.seller_id left outer join roles role2_ on roles1_.role_id=role2_.id left outer join seller_types types3_ on seller0_.id=types3_.seller_id left outer join types paymenttyp4_ on types3_.type_id=paymenttyp4_.id where seller0_.id=?
2020-12-22 16:26:22,456 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] select paymenttyp0_.id as id1_4_, paymenttyp0_.type as type2_4_ from types paymenttyp0_ where paymenttyp0_.type=?
2020-12-22 16:26:22,513 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] insert into types (type) values (?)
2020-12-22 16:26:22,544 DEBUG org.hibernate.engine.jdbc.spi.SqlStatementLogger [https-jsse-nio-8084-exec-4] insert into seller_types (seller_id, type_id) values (?, ?)
2020-12-22 16:26:22,617 INFO com.ws.sep.seller.controllers.PaymentController [https-jsse-nio-8084-exec-4] Successful seller update.
